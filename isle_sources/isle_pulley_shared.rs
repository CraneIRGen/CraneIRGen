// GENERATED BY ISLE. DO NOT EDIT!
//
// Generated automatically from the instruction-selection DSL code in:
// - src/prelude.isle
// - src/prelude_lower.isle
// - src/isa/pulley_shared/inst.isle
// - src/isa/pulley_shared/lower.isle
// - /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle
// - /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/clif_lower.isle

use super::*; // Pulls in all external types.
use std::marker::PhantomData;

/// Context during lowering: an implementation of this trait
/// must be provided with all external constructors and extractors.
/// A mutable borrow is passed along through all lowering logic.
pub trait Context {
    fn unit(&mut self) -> Unit;
    fn value_type(&mut self, arg0: Value) -> Type;
    fn u32_nonnegative(&mut self, arg0: u32) -> Option<u32>;
    fn offset32(&mut self, arg0: Offset32) -> i32;
    fn u32_lteq(&mut self, arg0: u32, arg1: u32) -> Option<Unit>;
    fn u8_lteq(&mut self, arg0: u8, arg1: u8) -> Option<Unit>;
    fn u8_lt(&mut self, arg0: u8, arg1: u8) -> Option<Unit>;
    fn u8_as_i8(&mut self, arg0: u8) -> i8;
    fn u8_as_u32(&mut self, arg0: u8) -> u32;
    fn u8_as_u64(&mut self, arg0: u8) -> u64;
    fn u16_as_i16(&mut self, arg0: u16) -> i16;
    fn u16_as_u32(&mut self, arg0: u16) -> u32;
    fn u16_as_u64(&mut self, arg0: u16) -> u64;
    fn u64_as_u8(&mut self, arg0: u64) -> u8;
    fn u64_as_u16(&mut self, arg0: u64) -> u16;
    fn u64_as_i64(&mut self, arg0: u64) -> i64;
    fn u16_try_from_u64(&mut self, arg0: u64) -> Option<u16>;
    fn u32_try_from_u64(&mut self, arg0: u64) -> Option<u32>;
    fn i8_try_from_u64(&mut self, arg0: u64) -> Option<i8>;
    fn i16_try_from_u64(&mut self, arg0: u64) -> Option<i16>;
    fn i32_try_from_u64(&mut self, arg0: u64) -> Option<i32>;
    fn u32_as_u64(&mut self, arg0: u32) -> u64;
    fn i32_as_i64(&mut self, arg0: i32) -> i64;
    fn i64_as_u64(&mut self, arg0: i64) -> u64;
    fn i64_neg(&mut self, arg0: i64) -> i64;
    fn i8_neg(&mut self, arg0: i8) -> i8;
    fn u128_as_u64(&mut self, arg0: u128) -> Option<u64>;
    fn u64_as_u32(&mut self, arg0: u64) -> Option<u32>;
    fn u32_as_u16(&mut self, arg0: u32) -> Option<u16>;
    fn u64_as_i32(&mut self, arg0: u64) -> i32;
    fn u8_and(&mut self, arg0: u8, arg1: u8) -> u8;
    fn u8_shl(&mut self, arg0: u8, arg1: u8) -> u8;
    fn u8_shr(&mut self, arg0: u8, arg1: u8) -> u8;
    fn u8_sub(&mut self, arg0: u8, arg1: u8) -> u8;
    fn u32_add(&mut self, arg0: u32, arg1: u32) -> u32;
    fn u32_sub(&mut self, arg0: u32, arg1: u32) -> u32;
    fn u32_and(&mut self, arg0: u32, arg1: u32) -> u32;
    fn u32_shl(&mut self, arg0: u32, arg1: u32) -> u32;
    fn s32_add_fallible(&mut self, arg0: i32, arg1: i32) -> Option<i32>;
    fn u64_add(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_sub(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_mul(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_sdiv(&mut self, arg0: u64, arg1: u64) -> Option<u64>;
    fn u64_udiv(&mut self, arg0: u64, arg1: u64) -> Option<u64>;
    fn u64_and(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_or(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_xor(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_shl(&mut self, arg0: u64, arg1: u64) -> u64;
    fn imm64_shl(&mut self, arg0: Type, arg1: Imm64, arg2: Imm64) -> Imm64;
    fn imm64_ushr(&mut self, arg0: Type, arg1: Imm64, arg2: Imm64) -> Imm64;
    fn imm64_sshr(&mut self, arg0: Type, arg1: Imm64, arg2: Imm64) -> Imm64;
    fn u64_not(&mut self, arg0: u64) -> u64;
    fn u64_eq(&mut self, arg0: u64, arg1: u64) -> bool;
    fn u64_le(&mut self, arg0: u64, arg1: u64) -> bool;
    fn u64_lt(&mut self, arg0: u64, arg1: u64) -> bool;
    fn i64_shr(&mut self, arg0: i64, arg1: i64) -> i64;
    fn i64_ctz(&mut self, arg0: i64) -> i64;
    fn i64_sextend_u64(&mut self, arg0: Type, arg1: u64) -> i64;
    fn i64_sextend_imm64(&mut self, arg0: Type, arg1: Imm64) -> i64;
    fn u64_uextend_imm64(&mut self, arg0: Type, arg1: Imm64) -> u64;
    fn imm64_icmp(&mut self, arg0: Type, arg1: &IntCC, arg2: Imm64, arg3: Imm64) -> Imm64;
    fn u64_is_zero(&mut self, arg0: u64) -> bool;
    fn i64_is_zero(&mut self, arg0: i64) -> bool;
    fn u64_is_odd(&mut self, arg0: u64) -> bool;
    fn u128_replicated_u64(&mut self, arg0: u128) -> Option<u64>;
    fn u64_replicated_u32(&mut self, arg0: u64) -> Option<u64>;
    fn u32_replicated_u16(&mut self, arg0: u64) -> Option<u64>;
    fn u16_replicated_u8(&mut self, arg0: u64) -> Option<u8>;
    fn f16_min(&mut self, arg0: Ieee16, arg1: Ieee16) -> Option<Ieee16>;
    fn f16_max(&mut self, arg0: Ieee16, arg1: Ieee16) -> Option<Ieee16>;
    fn f16_neg(&mut self, arg0: Ieee16) -> Ieee16;
    fn f16_abs(&mut self, arg0: Ieee16) -> Ieee16;
    fn f16_copysign(&mut self, arg0: Ieee16, arg1: Ieee16) -> Ieee16;
    fn f32_add(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_sub(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_mul(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_div(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_sqrt(&mut self, arg0: Ieee32) -> Option<Ieee32>;
    fn f32_ceil(&mut self, arg0: Ieee32) -> Option<Ieee32>;
    fn f32_floor(&mut self, arg0: Ieee32) -> Option<Ieee32>;
    fn f32_trunc(&mut self, arg0: Ieee32) -> Option<Ieee32>;
    fn f32_nearest(&mut self, arg0: Ieee32) -> Option<Ieee32>;
    fn f32_min(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_max(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_neg(&mut self, arg0: Ieee32) -> Ieee32;
    fn f32_abs(&mut self, arg0: Ieee32) -> Ieee32;
    fn f32_copysign(&mut self, arg0: Ieee32, arg1: Ieee32) -> Ieee32;
    fn f64_add(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_sub(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_mul(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_div(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_sqrt(&mut self, arg0: Ieee64) -> Option<Ieee64>;
    fn f64_ceil(&mut self, arg0: Ieee64) -> Option<Ieee64>;
    fn f64_floor(&mut self, arg0: Ieee64) -> Option<Ieee64>;
    fn f64_trunc(&mut self, arg0: Ieee64) -> Option<Ieee64>;
    fn f64_nearest(&mut self, arg0: Ieee64) -> Option<Ieee64>;
    fn f64_min(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_max(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_neg(&mut self, arg0: Ieee64) -> Ieee64;
    fn f64_abs(&mut self, arg0: Ieee64) -> Ieee64;
    fn f64_copysign(&mut self, arg0: Ieee64, arg1: Ieee64) -> Ieee64;
    fn f128_min(&mut self, arg0: Ieee128, arg1: Ieee128) -> Option<Ieee128>;
    fn f128_max(&mut self, arg0: Ieee128, arg1: Ieee128) -> Option<Ieee128>;
    fn f128_neg(&mut self, arg0: Ieee128) -> Ieee128;
    fn f128_abs(&mut self, arg0: Ieee128) -> Ieee128;
    fn f128_copysign(&mut self, arg0: Ieee128, arg1: Ieee128) -> Ieee128;
    fn ty_umin(&mut self, arg0: Type) -> u64;
    fn ty_umax(&mut self, arg0: Type) -> u64;
    fn ty_smin(&mut self, arg0: Type) -> u64;
    fn ty_smax(&mut self, arg0: Type) -> u64;
    fn ty_bits(&mut self, arg0: Type) -> u8;
    fn ty_bits_u16(&mut self, arg0: Type) -> u16;
    fn ty_bits_u64(&mut self, arg0: Type) -> u64;
    fn ty_mask(&mut self, arg0: Type) -> u64;
    fn ty_lane_mask(&mut self, arg0: Type) -> u64;
    fn ty_lane_count(&mut self, arg0: Type) -> u64;
    fn ty_bytes(&mut self, arg0: Type) -> u16;
    fn lane_type(&mut self, arg0: Type) -> Type;
    fn ty_half_lanes(&mut self, arg0: Type) -> Option<Type>;
    fn ty_half_width(&mut self, arg0: Type) -> Option<Type>;
    fn ty_equal(&mut self, arg0: Type, arg1: Type) -> bool;
    fn mem_flags_trusted(&mut self) -> MemFlags;
    fn intcc_swap_args(&mut self, arg0: &IntCC) -> IntCC;
    fn intcc_complement(&mut self, arg0: &IntCC) -> IntCC;
    fn intcc_without_eq(&mut self, arg0: &IntCC) -> IntCC;
    fn floatcc_swap_args(&mut self, arg0: &FloatCC) -> FloatCC;
    fn floatcc_complement(&mut self, arg0: &FloatCC) -> FloatCC;
    fn floatcc_unordered(&mut self, arg0: &FloatCC) -> bool;
    fn fits_in_16(&mut self, arg0: Type) -> Option<Type>;
    fn fits_in_32(&mut self, arg0: Type) -> Option<Type>;
    fn lane_fits_in_32(&mut self, arg0: Type) -> Option<Type>;
    fn fits_in_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_32(&mut self, arg0: Type) -> Option<Type>;
    fn ty_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_int_ref_scalar_64_extract(&mut self, arg0: Type) -> Option<Type>;
    fn ty_int_ref_scalar_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_32_or_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_8_or_16(&mut self, arg0: Type) -> Option<Type>;
    fn ty_16_or_32(&mut self, arg0: Type) -> Option<Type>;
    fn int_fits_in_32(&mut self, arg0: Type) -> Option<Type>;
    fn ty_int_ref_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_int_ref_16_to_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_int(&mut self, arg0: Type) -> Option<Type>;
    fn ty_scalar(&mut self, arg0: Type) -> Option<Type>;
    fn ty_scalar_float(&mut self, arg0: Type) -> Option<Type>;
    fn ty_float_or_vec(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vector_float(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vector_not_float(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vec64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vec64_ctor(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vec128(&mut self, arg0: Type) -> Option<Type>;
    fn ty_dyn_vec64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_dyn_vec128(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vec64_int(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vec128_int(&mut self, arg0: Type) -> Option<Type>;
    fn ty_addr64(&mut self, arg0: Type) -> Option<Type>;
    fn not_vec32x2(&mut self, arg0: Type) -> Option<Type>;
    fn not_i64x2(&mut self, arg0: Type) -> Option<()>;
    fn u8_from_uimm8(&mut self, arg0: Uimm8) -> u8;
    fn u64_from_bool(&mut self, arg0: bool) -> u64;
    fn u64_from_imm64(&mut self, arg0: Imm64) -> u64;
    fn nonzero_u64_from_imm64(&mut self, arg0: Imm64) -> Option<u64>;
    fn imm64_power_of_two(&mut self, arg0: Imm64) -> Option<u64>;
    fn imm64(&mut self, arg0: u64) -> Imm64;
    fn imm64_masked(&mut self, arg0: Type, arg1: u64) -> Imm64;
    fn u16_from_ieee16(&mut self, arg0: Ieee16) -> u16;
    fn u32_from_ieee32(&mut self, arg0: Ieee32) -> u32;
    fn u64_from_ieee64(&mut self, arg0: Ieee64) -> u64;
    fn multi_lane(&mut self, arg0: Type) -> Option<(u32, u32)>;
    fn dynamic_lane(&mut self, arg0: Type) -> Option<(u32, u32)>;
    fn ty_dyn64_int(&mut self, arg0: Type) -> Option<Type>;
    fn ty_dyn128_int(&mut self, arg0: Type) -> Option<Type>;
    fn offset32_to_i32(&mut self, arg0: Offset32) -> i32;
    fn i32_to_offset32(&mut self, arg0: i32) -> Offset32;
    fn intcc_unsigned(&mut self, arg0: &IntCC) -> IntCC;
    fn signed_cond_code(&mut self, arg0: &IntCC) -> Option<IntCC>;
    fn trap_code_division_by_zero(&mut self) -> TrapCode;
    fn trap_code_integer_overflow(&mut self) -> TrapCode;
    fn trap_code_bad_conversion_to_integer(&mut self) -> TrapCode;
    fn range(&mut self, arg0: usize, arg1: usize) -> Range;
    fn range_view(&mut self, arg0: Range) -> RangeView;
    fn value_reg(&mut self, arg0: Reg) -> ValueRegs;
    fn writable_value_reg(&mut self, arg0: WritableReg) -> WritableValueRegs;
    fn value_regs(&mut self, arg0: Reg, arg1: Reg) -> ValueRegs;
    fn writable_value_regs(&mut self, arg0: WritableReg, arg1: WritableReg) -> WritableValueRegs;
    fn value_regs_invalid(&mut self) -> ValueRegs;
    fn output_none(&mut self) -> InstOutput;
    fn output(&mut self, arg0: ValueRegs) -> InstOutput;
    fn output_pair(&mut self, arg0: ValueRegs, arg1: ValueRegs) -> InstOutput;
    fn output_builder_new(&mut self) -> InstOutputBuilder;
    fn output_builder_push(&mut self, arg0: &InstOutputBuilder, arg1: ValueRegs) -> Unit;
    fn output_builder_finish(&mut self, arg0: &InstOutputBuilder) -> InstOutput;
    fn temp_writable_reg(&mut self, arg0: Type) -> WritableReg;
    fn is_valid_reg(&mut self, arg0: Reg) -> bool;
    fn invalid_reg(&mut self) -> Reg;
    fn mark_value_used(&mut self, arg0: Value) -> Unit;
    fn put_in_reg(&mut self, arg0: Value) -> Reg;
    fn put_in_regs(&mut self, arg0: Value) -> ValueRegs;
    fn ensure_in_vreg(&mut self, arg0: Reg, arg1: Type) -> Reg;
    fn value_regs_get(&mut self, arg0: ValueRegs, arg1: usize) -> Reg;
    fn value_regs_len(&mut self, arg0: ValueRegs) -> usize;
    fn preg_to_reg(&mut self, arg0: PReg) -> Reg;
    fn add_range_fact(&mut self, arg0: Reg, arg1: u16, arg2: u64, arg3: u64) -> Reg;
    fn single_target(&mut self, arg0: &MachLabelSlice) -> Option<MachLabel>;
    fn two_targets(&mut self, arg0: &MachLabelSlice) -> Option<(MachLabel, MachLabel)>;
    fn jump_table_targets(&mut self, arg0: &MachLabelSlice)
        -> Option<(MachLabel, BoxVecMachLabel)>;
    fn jump_table_size(&mut self, arg0: &BoxVecMachLabel) -> u32;
    fn value_list_slice(&mut self, arg0: ValueList) -> ValueSlice;
    fn value_slice_empty(&mut self, arg0: ValueSlice) -> Option<()>;
    fn value_slice_unwrap(&mut self, arg0: ValueSlice) -> Option<(Value, ValueSlice)>;
    fn value_slice_len(&mut self, arg0: ValueSlice) -> usize;
    fn value_slice_get(&mut self, arg0: ValueSlice, arg1: usize) -> Value;
    fn writable_reg_to_reg(&mut self, arg0: WritableReg) -> Reg;
    fn inst_results(&mut self, arg0: Inst) -> ValueSlice;
    fn value_is_unused(&mut self, arg0: Value) -> bool;
    fn first_result(&mut self, arg0: Inst) -> Option<Value>;
    fn inst_data(&mut self, arg0: Inst) -> InstructionData;
    fn def_inst(&mut self, arg0: Value) -> Option<Inst>;
    fn i32_from_iconst(&mut self, arg0: Value) -> Option<i32>;
    fn i64_from_iconst(&mut self, arg0: Value) -> Option<i64>;
    fn zero_value(&mut self, arg0: Value) -> Option<Value>;
    fn is_sinkable_inst(&mut self, arg0: Value) -> Option<Inst>;
    fn maybe_uextend(&mut self, arg0: Value) -> Option<Value>;
    fn uimm8(&mut self, arg0: Imm64) -> Option<u8>;
    fn emit(&mut self, arg0: &MInst) -> Unit;
    fn sink_inst(&mut self, arg0: Inst) -> Unit;
    fn emit_u64_le_const(&mut self, arg0: u64) -> VCodeConstant;
    fn emit_u128_le_const(&mut self, arg0: u128) -> VCodeConstant;
    fn const_to_vconst(&mut self, arg0: Constant) -> VCodeConstant;
    fn tls_model(&mut self, arg0: Type) -> TlsModel;
    fn tls_model_is_elf_gd(&mut self) -> Option<Unit>;
    fn tls_model_is_macho(&mut self) -> Option<Unit>;
    fn tls_model_is_coff(&mut self) -> Option<Unit>;
    fn preserve_frame_pointers(&mut self) -> Option<Unit>;
    fn stack_switch_model(&mut self) -> Option<StackSwitchModel>;
    fn box_external_name(&mut self, arg0: ExternalName) -> BoxExternalName;
    fn func_ref_data(&mut self, arg0: FuncRef) -> (SigRef, ExternalName, RelocDistance);
    fn symbol_value_data(
        &mut self,
        arg0: GlobalValue,
    ) -> Option<(ExternalName, RelocDistance, i64)>;
    fn reloc_distance_near(&mut self, arg0: RelocDistance) -> Option<()>;
    fn vec_mask_from_immediate(&mut self, arg0: Immediate) -> Option<VecMask>;
    fn u128_from_immediate(&mut self, arg0: Immediate) -> Option<u128>;
    fn vconst_from_immediate(&mut self, arg0: Immediate) -> Option<VCodeConstant>;
    fn u128_from_constant(&mut self, arg0: Constant) -> Option<u128>;
    fn u64_from_constant(&mut self, arg0: Constant) -> Option<u64>;
    fn shuffle64_from_imm(&mut self, arg0: Immediate) -> Option<(u8, u8)>;
    fn shuffle32_from_imm(&mut self, arg0: Immediate) -> Option<(u8, u8, u8, u8)>;
    fn shuffle16_from_imm(&mut self, arg0: Immediate) -> Option<(u8, u8, u8, u8, u8, u8, u8, u8)>;
    fn only_writable_reg(&mut self, arg0: WritableValueRegs) -> Option<WritableReg>;
    fn writable_regs_get(&mut self, arg0: WritableValueRegs, arg1: usize) -> WritableReg;
    fn abi_num_args(&mut self, arg0: Sig) -> usize;
    fn abi_get_arg(&mut self, arg0: Sig, arg1: usize) -> ABIArg;
    fn abi_num_rets(&mut self, arg0: Sig) -> usize;
    fn abi_get_ret(&mut self, arg0: Sig, arg1: usize) -> ABIArg;
    fn abi_ret_arg(&mut self, arg0: Sig) -> Option<ABIArg>;
    fn abi_no_ret_arg(&mut self, arg0: Sig) -> Option<()>;
    fn abi_unwrap_ret_area_ptr(&mut self) -> Reg;
    fn abi_stackslot_addr(&mut self, arg0: WritableReg, arg1: StackSlot, arg2: Offset32) -> MInst;
    fn abi_dynamic_stackslot_addr(&mut self, arg0: WritableReg, arg1: DynamicStackSlot) -> MInst;
    fn abi_arg_only_slot(&mut self, arg0: &ABIArg) -> Option<ABIArgSlot>;
    fn abi_arg_implicit_pointer(&mut self, arg0: &ABIArg) -> Option<(ABIArgSlot, i64, Type)>;
    fn real_reg_to_reg(&mut self, arg0: RealReg) -> Reg;
    fn real_reg_to_writable_reg(&mut self, arg0: RealReg) -> WritableReg;
    fn gen_move(&mut self, arg0: Type, arg1: WritableReg, arg2: Reg) -> MInst;
    fn gen_return(&mut self, arg0: ValueSlice) -> Unit;
    fn gen_return_call(
        &mut self,
        arg0: SigRef,
        arg1: ExternalName,
        arg2: RelocDistance,
        arg3: ValueSlice,
    ) -> InstOutput;
    fn gen_return_call_indirect(
        &mut self,
        arg0: SigRef,
        arg1: Value,
        arg2: ValueSlice,
    ) -> InstOutput;
    fn safe_divisor_from_imm64(&mut self, arg0: Type, arg1: Imm64) -> Option<u64>;
    fn cond_invert(&mut self, arg0: &Cond) -> Cond;
    fn xreg_new(&mut self, arg0: Reg) -> XReg;
    fn writable_xreg_new(&mut self, arg0: WritableReg) -> WritableXReg;
    fn writable_xreg_to_xreg(&mut self, arg0: WritableXReg) -> XReg;
    fn writable_xreg_to_writable_reg(&mut self, arg0: WritableXReg) -> WritableReg;
    fn xreg_to_reg(&mut self, arg0: XReg) -> Reg;
    fn freg_new(&mut self, arg0: Reg) -> FReg;
    fn writable_freg_new(&mut self, arg0: WritableReg) -> WritableFReg;
    fn writable_freg_to_freg(&mut self, arg0: WritableFReg) -> FReg;
    fn writable_freg_to_writable_reg(&mut self, arg0: WritableFReg) -> WritableReg;
    fn freg_to_reg(&mut self, arg0: FReg) -> Reg;
    fn vreg_new(&mut self, arg0: Reg) -> VReg;
    fn writable_vreg_new(&mut self, arg0: WritableReg) -> WritableVReg;
    fn writable_vreg_to_vreg(&mut self, arg0: WritableVReg) -> VReg;
    fn writable_vreg_to_writable_reg(&mut self, arg0: WritableVReg) -> WritableReg;
    fn vreg_to_reg(&mut self, arg0: VReg) -> Reg;
    fn sp_reg(&mut self) -> XReg;
    fn fp_reg(&mut self) -> XReg;
    fn lr_reg(&mut self) -> XReg;
    fn gen_call(
        &mut self,
        arg0: SigRef,
        arg1: ExternalName,
        arg2: RelocDistance,
        arg3: ValueSlice,
    ) -> InstOutput;
    fn gen_call_indirect(&mut self, arg0: SigRef, arg1: Value, arg2: ValueSlice) -> InstOutput;
    fn unpack_value_array_2(&mut self, arg0: &ValueArray2) -> (Value, Value);
    fn pack_value_array_2(&mut self, arg0: Value, arg1: Value) -> ValueArray2;
    fn unpack_value_array_3(&mut self, arg0: &ValueArray3) -> (Value, Value, Value);
    fn pack_value_array_3(&mut self, arg0: Value, arg1: Value, arg2: Value) -> ValueArray3;
    fn unpack_block_array_2(&mut self, arg0: &BlockArray2) -> (BlockCall, BlockCall);
    fn pack_block_array_2(&mut self, arg0: BlockCall, arg1: BlockCall) -> BlockArray2;
}

pub trait ContextIter {
    type Context;
    type Output;
    fn next(&mut self, ctx: &mut Self::Context) -> Option<Self::Output>;
    fn size_hint(&self) -> (usize, Option<usize>) {
        (0, None)
    }
}

pub trait IntoContextIter {
    type Context;
    type Output;
    type IntoIter: ContextIter<Context = Self::Context, Output = Self::Output>;
    fn into_context_iter(self) -> Self::IntoIter;
}

pub trait Length {
    fn len(&self) -> usize;
}

impl<T> Length for std::vec::Vec<T> {
    fn len(&self) -> usize {
        std::vec::Vec::len(self)
    }
}

pub struct ContextIterWrapper<I, C> {
    iter: I,
    _ctx: std::marker::PhantomData<C>,
}
impl<I: Default, C> Default for ContextIterWrapper<I, C> {
    fn default() -> Self {
        ContextIterWrapper {
            iter: I::default(),
            _ctx: std::marker::PhantomData,
        }
    }
}
impl<I, C> std::ops::Deref for ContextIterWrapper<I, C> {
    type Target = I;
    fn deref(&self) -> &I {
        &self.iter
    }
}
impl<I, C> std::ops::DerefMut for ContextIterWrapper<I, C> {
    fn deref_mut(&mut self) -> &mut I {
        &mut self.iter
    }
}
impl<I: Iterator, C: Context> From<I> for ContextIterWrapper<I, C> {
    fn from(iter: I) -> Self {
        Self {
            iter,
            _ctx: std::marker::PhantomData,
        }
    }
}
impl<I: Iterator, C: Context> ContextIter for ContextIterWrapper<I, C> {
    type Context = C;
    type Output = I::Item;
    fn next(&mut self, _ctx: &mut Self::Context) -> Option<Self::Output> {
        self.iter.next()
    }
    fn size_hint(&self) -> (usize, Option<usize>) {
        self.iter.size_hint()
    }
}
impl<I: IntoIterator, C: Context> IntoContextIter for ContextIterWrapper<I, C> {
    type Context = C;
    type Output = I::Item;
    type IntoIter = ContextIterWrapper<I::IntoIter, C>;
    fn into_context_iter(self) -> Self::IntoIter {
        ContextIterWrapper {
            iter: self.iter.into_iter(),
            _ctx: std::marker::PhantomData,
        }
    }
}
impl<T, E: Extend<T>, C> Extend<T> for ContextIterWrapper<E, C> {
    fn extend<I: IntoIterator<Item = T>>(&mut self, iter: I) {
        self.iter.extend(iter);
    }
}
impl<L: Length, C> Length for ContextIterWrapper<L, C> {
    fn len(&self) -> usize {
        self.iter.len()
    }
}

/// Internal type MultiReg: defined at src/prelude_lower.isle line 20.
#[derive(Clone, Debug)]
pub enum MultiReg {
    Empty,
    One { a: Reg },
    Two { a: Reg, b: Reg },
    Three { a: Reg, b: Reg, c: Reg },
    Four { a: Reg, b: Reg, c: Reg, d: Reg },
}

/// Internal type SideEffectNoResult: defined at src/prelude_lower.isle line 388.
#[derive(Clone, Debug)]
pub enum SideEffectNoResult {
    Inst {
        inst: MInst,
    },
    Inst2 {
        inst1: MInst,
        inst2: MInst,
    },
    Inst3 {
        inst1: MInst,
        inst2: MInst,
        inst3: MInst,
    },
}

/// Internal type ProducesFlags: defined at src/prelude_lower.isle line 434.
#[derive(Clone, Debug)]
pub enum ProducesFlags {
    AlreadyExistingFlags,
    ProducesFlagsSideEffect { inst: MInst },
    ProducesFlagsTwiceSideEffect { inst1: MInst, inst2: MInst },
    ProducesFlagsReturnsReg { inst: MInst, result: Reg },
    ProducesFlagsReturnsResultWithConsumer { inst: MInst, result: Reg },
}

/// Internal type ConsumesAndProducesFlags: defined at src/prelude_lower.isle line 453.
#[derive(Clone, Debug)]
pub enum ConsumesAndProducesFlags {
    SideEffect { inst: MInst },
    ReturnsReg { inst: MInst, result: Reg },
}

/// Internal type ConsumesFlags: defined at src/prelude_lower.isle line 461.
#[derive(Clone, Debug)]
pub enum ConsumesFlags {
    ConsumesFlagsSideEffect {
        inst: MInst,
    },
    ConsumesFlagsSideEffect2 {
        inst1: MInst,
        inst2: MInst,
    },
    ConsumesFlagsReturnsResultWithProducer {
        inst: MInst,
        result: Reg,
    },
    ConsumesFlagsReturnsReg {
        inst: MInst,
        result: Reg,
    },
    ConsumesFlagsTwiceReturnsValueRegs {
        inst1: MInst,
        inst2: MInst,
        result: ValueRegs,
    },
    ConsumesFlagsFourTimesReturnsValueRegs {
        inst1: MInst,
        inst2: MInst,
        inst3: MInst,
        inst4: MInst,
        result: ValueRegs,
    },
}

/// Internal type MInst: defined at src/isa/pulley_shared/inst.isle line 10.
#[derive(Clone, Debug)]
pub enum MInst {
    Args {
        args: VecArgPair,
    },
    Rets {
        rets: VecRetPair,
    },
    Unwind {
        inst: UnwindInst,
    },
    BrTable {
        idx: XReg,
        default: MachLabel,
        targets: BoxVecMachLabel,
    },
    TrapIf {
        cond: Cond,
        code: TrapCode,
    },
    Nop,
    GetSpecial {
        dst: WritableXReg,
        reg: XReg,
    },
    LoadExtName {
        dst: WritableXReg,
        name: BoxExternalName,
        offset: i64,
    },
    Call {
        info: BoxCallInfo,
    },
    IndirectCall {
        info: BoxCallIndInfo,
    },
    IndirectCallHost {
        info: BoxCallInfo,
    },
    Jump {
        label: MachLabel,
    },
    BrIf {
        cond: Cond,
        taken: MachLabel,
        not_taken: MachLabel,
    },
    LoadAddr {
        dst: WritableXReg,
        mem: Amode,
    },
    XLoad {
        dst: WritableXReg,
        mem: Amode,
        ty: Type,
        flags: MemFlags,
        ext: ExtKind,
    },
    FLoad {
        dst: WritableFReg,
        mem: Amode,
        ty: Type,
        flags: MemFlags,
    },
    VLoad {
        dst: WritableVReg,
        mem: Amode,
        ty: Type,
        flags: MemFlags,
    },
    XStore {
        mem: Amode,
        src: XReg,
        ty: Type,
        flags: MemFlags,
    },
    FStore {
        mem: Amode,
        src: FReg,
        ty: Type,
        flags: MemFlags,
    },
    VStore {
        mem: Amode,
        src: VReg,
        ty: Type,
        flags: MemFlags,
    },
    Raw {
        raw: RawInst,
    },
}

/// Internal type Cond: defined at src/isa/pulley_shared/inst.isle line 93.
#[derive(Clone, Debug)]
pub enum Cond {
    If32 { reg: XReg },
    IfNot32 { reg: XReg },
    IfXeq32 { src1: XReg, src2: XReg },
    IfXneq32 { src1: XReg, src2: XReg },
    IfXslt32 { src1: XReg, src2: XReg },
    IfXslteq32 { src1: XReg, src2: XReg },
    IfXult32 { src1: XReg, src2: XReg },
    IfXulteq32 { src1: XReg, src2: XReg },
    IfXeq64 { src1: XReg, src2: XReg },
    IfXneq64 { src1: XReg, src2: XReg },
    IfXslt64 { src1: XReg, src2: XReg },
    IfXslteq64 { src1: XReg, src2: XReg },
    IfXult64 { src1: XReg, src2: XReg },
    IfXulteq64 { src1: XReg, src2: XReg },
}

/// Internal type Amode: defined at src/isa/pulley_shared/inst.isle line 132.
#[derive(Clone, Debug)]
pub enum Amode {
    SpOffset { offset: i32 },
    RegOffset { base: XReg, offset: i32 },
    Stack { amode: StackAMode },
}

/// Internal type ExtKind: defined at src/isa/pulley_shared/inst.isle line 140.
#[derive(Copy, Clone, PartialEq, Eq, Debug)]
pub enum ExtKind {
    None,
    Sign32,
    Sign64,
    Zero32,
    Zero64,
}

/// Internal type RawInst: defined at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 0.
#[derive(Clone, Debug)]
pub enum RawInst {
    Ret,
    Xmov {
        dst: WritableXReg,
        src: XReg,
    },
    Fmov {
        dst: WritableFReg,
        src: FReg,
    },
    Vmov {
        dst: WritableVReg,
        src: VReg,
    },
    Xconst8 {
        dst: WritableXReg,
        imm: i8,
    },
    Xconst16 {
        dst: WritableXReg,
        imm: i16,
    },
    Xconst32 {
        dst: WritableXReg,
        imm: i32,
    },
    Xconst64 {
        dst: WritableXReg,
        imm: i64,
    },
    Xadd32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xadd64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xadd32UoverflowTrap {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
        code: TrapCode,
    },
    Xadd64UoverflowTrap {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
        code: TrapCode,
    },
    Xsub32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xsub64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XMul32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XMul64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xctz32 {
        dst: WritableXReg,
        src: XReg,
    },
    Xctz64 {
        dst: WritableXReg,
        src: XReg,
    },
    Xclz32 {
        dst: WritableXReg,
        src: XReg,
    },
    Xclz64 {
        dst: WritableXReg,
        src: XReg,
    },
    Xpopcnt32 {
        dst: WritableXReg,
        src: XReg,
    },
    Xpopcnt64 {
        dst: WritableXReg,
        src: XReg,
    },
    Xrotl32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xrotl64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xrotr32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xrotr64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshl32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshr32S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshr32U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshl64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshr64S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshr64U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xeq64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xneq64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xslt64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xslteq64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xult64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xulteq64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xeq32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xneq32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xslt32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xslteq32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xult32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xulteq32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XLoad8U32Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad8S32Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad16LeU32Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad16LeS32Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad32LeOffset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad8U64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad8S64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad16LeU64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad16LeS64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad32LeU64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad32LeS64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad64LeOffset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XStore8Offset32 {
        ptr: XReg,
        offset: i32,
        src: XReg,
    },
    XStore16LeOffset32 {
        ptr: XReg,
        offset: i32,
        src: XReg,
    },
    XStore32LeOffset32 {
        ptr: XReg,
        offset: i32,
        src: XReg,
    },
    XStore64LeOffset32 {
        ptr: XReg,
        offset: i32,
        src: XReg,
    },
    Fload32LeOffset32 {
        dst: WritableFReg,
        ptr: XReg,
        offset: i32,
    },
    Fload64LeOffset32 {
        dst: WritableFReg,
        ptr: XReg,
        offset: i32,
    },
    Fstore32LeOffset32 {
        ptr: XReg,
        offset: i32,
        src: FReg,
    },
    Fstore64LeOffset32 {
        ptr: XReg,
        offset: i32,
        src: FReg,
    },
    VLoad128Offset32 {
        dst: WritableVReg,
        ptr: XReg,
        offset: i32,
    },
    Vstore128LeOffset32 {
        ptr: XReg,
        offset: i32,
        src: VReg,
    },
    PushFrame,
    PopFrame,
    XPush32 {
        src: XReg,
    },
    XPush64 {
        src: XReg,
    },
    XPop32 {
        dst: WritableXReg,
    },
    XPop64 {
        dst: WritableXReg,
    },
    BitcastIntFromFloat32 {
        dst: WritableXReg,
        src: FReg,
    },
    BitcastIntFromFloat64 {
        dst: WritableXReg,
        src: FReg,
    },
    BitcastFloatFromInt32 {
        dst: WritableFReg,
        src: XReg,
    },
    BitcastFloatFromInt64 {
        dst: WritableFReg,
        src: XReg,
    },
    StackAlloc32 {
        amt: u32,
    },
    StackFree32 {
        amt: u32,
    },
    Zext8 {
        dst: WritableXReg,
        src: XReg,
    },
    Zext16 {
        dst: WritableXReg,
        src: XReg,
    },
    Zext32 {
        dst: WritableXReg,
        src: XReg,
    },
    Sext8 {
        dst: WritableXReg,
        src: XReg,
    },
    Sext16 {
        dst: WritableXReg,
        src: XReg,
    },
    Sext32 {
        dst: WritableXReg,
        src: XReg,
    },
    XDiv32S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XDiv64S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XDiv32U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XDiv64U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XRem32S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XRem64S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XRem32U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XRem64U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XBand32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XBand64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XBor32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XBor64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XBxor32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XBxor64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    FConst32 {
        dst: WritableFReg,
        bits: u32,
    },
    FConst64 {
        dst: WritableFReg,
        bits: u64,
    },
    Feq32 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Fneq32 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Flt32 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Flteq32 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Feq64 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Fneq64 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Flt64 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Flteq64 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    XSelect32 {
        dst: WritableXReg,
        cond: XReg,
        if_nonzero: XReg,
        if_zero: XReg,
    },
    XSelect64 {
        dst: WritableXReg,
        cond: XReg,
        if_nonzero: XReg,
        if_zero: XReg,
    },
    FSelect32 {
        dst: WritableFReg,
        cond: XReg,
        if_nonzero: FReg,
        if_zero: FReg,
    },
    FSelect64 {
        dst: WritableFReg,
        cond: XReg,
        if_nonzero: FReg,
        if_zero: FReg,
    },
    F32FromX32S {
        dst: WritableFReg,
        src: XReg,
    },
    F32FromX32U {
        dst: WritableFReg,
        src: XReg,
    },
    F32FromX64S {
        dst: WritableFReg,
        src: XReg,
    },
    F32FromX64U {
        dst: WritableFReg,
        src: XReg,
    },
    F64FromX32S {
        dst: WritableFReg,
        src: XReg,
    },
    F64FromX32U {
        dst: WritableFReg,
        src: XReg,
    },
    F64FromX64S {
        dst: WritableFReg,
        src: XReg,
    },
    F64FromX64U {
        dst: WritableFReg,
        src: XReg,
    },
    X32FromF32S {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF32U {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF64S {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF64U {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF32S {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF32U {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF64S {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF64U {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF32SSat {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF32USat {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF64SSat {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF64USat {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF32SSat {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF32USat {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF64SSat {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF64USat {
        dst: WritableXReg,
        src: FReg,
    },
    F32FromF64 {
        dst: WritableFReg,
        src: FReg,
    },
    F64FromF32 {
        dst: WritableFReg,
        src: FReg,
    },
    FCopySign32 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    FCopySign64 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Trap {
        code: TrapCode,
    },
    Nop,
    CallIndirectHost {
        id: u8,
    },
    Bswap32 {
        dst: WritableXReg,
        src: XReg,
    },
    Bswap64 {
        dst: WritableXReg,
        src: XReg,
    },
    XLoad16BeU64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad16BeS64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad32BeU64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad32BeS64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad64BeOffset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XStore16BeOffset32 {
        ptr: XReg,
        offset: i32,
        src: XReg,
    },
    XStore32BeOffset32 {
        ptr: XReg,
        offset: i32,
        src: XReg,
    },
    XStore64BeOffset32 {
        ptr: XReg,
        offset: i32,
        src: XReg,
    },
    Fload32BeOffset32 {
        dst: WritableFReg,
        ptr: XReg,
        offset: i32,
    },
    Fload64BeOffset32 {
        dst: WritableFReg,
        ptr: XReg,
        offset: i32,
    },
    Fstore32BeOffset32 {
        ptr: XReg,
        offset: i32,
        src: FReg,
    },
    Fstore64BeOffset32 {
        ptr: XReg,
        offset: i32,
        src: FReg,
    },
}

// Generated as internal constructor for term ty_shift_mask.
pub fn constructor_ty_shift_mask<C: Context>(ctx: &mut C, arg0: Type) -> u64 {
    let v1 = C::lane_type(ctx, arg0);
    let v2 = C::ty_bits(ctx, v1);
    let v3 = C::u8_as_u64(ctx, v2);
    let v5 = C::u64_sub(ctx, v3, 0x1_u64);
    // Rule at src/prelude.isle line 461.
    return v5;
}

// Generated as internal constructor for term output_reg.
pub fn constructor_output_reg<C: Context>(ctx: &mut C, arg0: Reg) -> InstOutput {
    let v1 = C::value_reg(ctx, arg0);
    let v2 = C::output(ctx, v1);
    // Rule at src/prelude_lower.isle line 85.
    return v2;
}

// Generated as internal constructor for term output_value.
pub fn constructor_output_value<C: Context>(ctx: &mut C, arg0: Value) -> InstOutput {
    let v1 = C::put_in_regs(ctx, arg0);
    let v2 = C::output(ctx, v1);
    // Rule at src/prelude_lower.isle line 89.
    return v2;
}

// Generated as internal constructor for term temp_reg.
pub fn constructor_temp_reg<C: Context>(ctx: &mut C, arg0: Type) -> Reg {
    let v1 = C::temp_writable_reg(ctx, arg0);
    let v2 = C::writable_reg_to_reg(ctx, v1);
    // Rule at src/prelude_lower.isle line 109.
    return v2;
}

// Generated as internal constructor for term value_regs_range.
pub fn constructor_value_regs_range<C: Context>(ctx: &mut C, arg0: ValueRegs) -> Range {
    let v2 = C::value_regs_len(ctx, arg0);
    let v3 = C::range(ctx, 0x0_usize, v2);
    // Rule at src/prelude_lower.isle line 163.
    return v3;
}

// Generated as internal constructor for term lo_reg.
pub fn constructor_lo_reg<C: Context>(ctx: &mut C, arg0: Value) -> Reg {
    let v1 = C::put_in_regs(ctx, arg0);
    let v3 = C::value_regs_get(ctx, v1, 0x0_usize);
    // Rule at src/prelude_lower.isle line 174.
    return v3;
}

// Generated as internal constructor for term multi_reg_to_pair_and_single.
pub fn constructor_multi_reg_to_pair_and_single<C: Context>(
    ctx: &mut C,
    arg0: &MultiReg,
) -> InstOutput {
    if let &MultiReg::Three {
        a: v1,
        b: v2,
        c: v3,
    } = arg0
    {
        let v4 = C::value_regs(ctx, v1, v2);
        let v5 = C::value_reg(ctx, v3);
        let v6 = C::output_pair(ctx, v4, v5);
        // Rule at src/prelude_lower.isle line 185.
        return v6;
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "multi_reg_to_pair_and_single", "src/prelude_lower.isle line 184"
    )
}

// Generated as internal constructor for term multi_reg_to_pair.
pub fn constructor_multi_reg_to_pair<C: Context>(ctx: &mut C, arg0: &MultiReg) -> InstOutput {
    if let &MultiReg::Two { a: v1, b: v2 } = arg0 {
        let v3 = C::value_regs(ctx, v1, v2);
        let v4 = C::output(ctx, v3);
        // Rule at src/prelude_lower.isle line 190.
        return v4;
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "multi_reg_to_pair", "src/prelude_lower.isle line 189"
    )
}

// Generated as internal constructor for term multi_reg_to_single.
pub fn constructor_multi_reg_to_single<C: Context>(ctx: &mut C, arg0: &MultiReg) -> InstOutput {
    if let &MultiReg::One { a: v1 } = arg0 {
        let v2 = C::value_reg(ctx, v1);
        let v3 = C::output(ctx, v2);
        // Rule at src/prelude_lower.isle line 195.
        return v3;
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "multi_reg_to_single", "src/prelude_lower.isle line 194"
    )
}

// Generated as internal constructor for term emit_side_effect.
pub fn constructor_emit_side_effect<C: Context>(ctx: &mut C, arg0: &SideEffectNoResult) -> Unit {
    match arg0 {
        &SideEffectNoResult::Inst { inst: ref v1 } => {
            let v2 = C::emit(ctx, v1);
            // Rule at src/prelude_lower.isle line 400.
            return v2;
        }
        &SideEffectNoResult::Inst2 {
            inst1: ref v3,
            inst2: ref v4,
        } => {
            let v5 = C::emit(ctx, v3);
            let v6 = C::emit(ctx, v4);
            // Rule at src/prelude_lower.isle line 402.
            return v6;
        }
        &SideEffectNoResult::Inst3 {
            inst1: ref v7,
            inst2: ref v8,
            inst3: ref v9,
        } => {
            let v10 = C::emit(ctx, v7);
            let v11 = C::emit(ctx, v8);
            let v12 = C::emit(ctx, v9);
            // Rule at src/prelude_lower.isle line 405.
            return v12;
        }
        _ => {}
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "emit_side_effect", "src/prelude_lower.isle line 399"
    )
}

// Generated as internal constructor for term side_effect.
pub fn constructor_side_effect<C: Context>(ctx: &mut C, arg0: &SideEffectNoResult) -> InstOutput {
    let v1 = constructor_emit_side_effect(ctx, arg0);
    let v2 = C::output_none(ctx);
    // Rule at src/prelude_lower.isle line 415.
    return v2;
}

// Generated as internal constructor for term side_effect_concat.
pub fn constructor_side_effect_concat<C: Context>(
    ctx: &mut C,
    arg0: &SideEffectNoResult,
    arg1: &SideEffectNoResult,
) -> SideEffectNoResult {
    match arg0 {
        &SideEffectNoResult::Inst { inst: ref v1 } => {
            match arg1 {
                &SideEffectNoResult::Inst { inst: ref v3 } => {
                    let v4 = SideEffectNoResult::Inst2 {
                        inst1: v1.clone(),
                        inst2: v3.clone(),
                    };
                    // Rule at src/prelude_lower.isle line 420.
                    return v4;
                }
                &SideEffectNoResult::Inst2 {
                    inst1: ref v5,
                    inst2: ref v6,
                } => {
                    let v7 = SideEffectNoResult::Inst3 {
                        inst1: v1.clone(),
                        inst2: v5.clone(),
                        inst3: v6.clone(),
                    };
                    // Rule at src/prelude_lower.isle line 422.
                    return v7;
                }
                _ => {}
            }
        }
        &SideEffectNoResult::Inst2 {
            inst1: ref v8,
            inst2: ref v9,
        } => {
            if let &SideEffectNoResult::Inst { inst: ref v3 } = arg1 {
                let v10 = SideEffectNoResult::Inst3 {
                    inst1: v8.clone(),
                    inst2: v9.clone(),
                    inst3: v3.clone(),
                };
                // Rule at src/prelude_lower.isle line 424.
                return v10;
            }
        }
        _ => {}
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "side_effect_concat", "src/prelude_lower.isle line 419"
    )
}

// Generated as internal constructor for term produces_flags_concat.
pub fn constructor_produces_flags_concat<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
    arg1: &ProducesFlags,
) -> ProducesFlags {
    if let &ProducesFlags::ProducesFlagsSideEffect { inst: ref v1 } = arg0 {
        if let &ProducesFlags::ProducesFlagsSideEffect { inst: ref v3 } = arg1 {
            let v4 = ProducesFlags::ProducesFlagsTwiceSideEffect {
                inst1: v1.clone(),
                inst2: v3.clone(),
            };
            // Rule at src/prelude_lower.isle line 449.
            return v4;
        }
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "produces_flags_concat", "src/prelude_lower.isle line 448"
    )
}

// Generated as internal constructor for term produces_flags_get_reg.
pub fn constructor_produces_flags_get_reg<C: Context>(ctx: &mut C, arg0: &ProducesFlags) -> Reg {
    match arg0 {
        &ProducesFlags::ProducesFlagsReturnsReg {
            inst: ref v1,
            result: v2,
        } => {
            // Rule at src/prelude_lower.isle line 479.
            return v2;
        }
        &ProducesFlags::ProducesFlagsReturnsResultWithConsumer {
            inst: ref v3,
            result: v4,
        } => {
            // Rule at src/prelude_lower.isle line 480.
            return v4;
        }
        _ => {}
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "produces_flags_get_reg", "src/prelude_lower.isle line 478"
    )
}

// Generated as internal constructor for term produces_flags_ignore.
pub fn constructor_produces_flags_ignore<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
) -> ProducesFlags {
    match arg0 {
        &ProducesFlags::ProducesFlagsReturnsReg {
            inst: ref v1,
            result: v2,
        } => {
            let v3 = ProducesFlags::ProducesFlagsSideEffect { inst: v1.clone() };
            // Rule at src/prelude_lower.isle line 485.
            return v3;
        }
        &ProducesFlags::ProducesFlagsReturnsResultWithConsumer {
            inst: ref v4,
            result: v5,
        } => {
            let v6 = ProducesFlags::ProducesFlagsSideEffect { inst: v4.clone() };
            // Rule at src/prelude_lower.isle line 487.
            return v6;
        }
        _ => {}
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "produces_flags_ignore", "src/prelude_lower.isle line 484"
    )
}

// Generated as internal constructor for term consumes_flags_concat.
pub fn constructor_consumes_flags_concat<C: Context>(
    ctx: &mut C,
    arg0: &ConsumesFlags,
    arg1: &ConsumesFlags,
) -> ConsumesFlags {
    match arg0 {
        &ConsumesFlags::ConsumesFlagsSideEffect { inst: ref v8 } => {
            if let &ConsumesFlags::ConsumesFlagsSideEffect { inst: ref v9 } = arg1 {
                let v10 = ConsumesFlags::ConsumesFlagsSideEffect2 {
                    inst1: v8.clone(),
                    inst2: v9.clone(),
                };
                // Rule at src/prelude_lower.isle line 500.
                return v10;
            }
        }
        &ConsumesFlags::ConsumesFlagsReturnsReg {
            inst: ref v1,
            result: v2,
        } => {
            if let &ConsumesFlags::ConsumesFlagsReturnsReg {
                inst: ref v4,
                result: v5,
            } = arg1
            {
                let v6 = C::value_regs(ctx, v2, v5);
                let v7 = ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                    inst1: v1.clone(),
                    inst2: v4.clone(),
                    result: v6,
                };
                // Rule at src/prelude_lower.isle line 494.
                return v7;
            }
        }
        _ => {}
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "consumes_flags_concat", "src/prelude_lower.isle line 493"
    )
}

// Generated as internal constructor for term with_flags.
pub fn constructor_with_flags<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
    arg1: &ConsumesFlags,
) -> ValueRegs {
    match arg0 {
        &ProducesFlags::ProducesFlagsSideEffect { inst: ref v12 } => {
            match arg1 {
                &ConsumesFlags::ConsumesFlagsReturnsReg {
                    inst: ref v13,
                    result: v14,
                } => {
                    let v15 = C::emit(ctx, v12);
                    let v16 = C::emit(ctx, v13);
                    let v17 = C::value_reg(ctx, v14);
                    // Rule at src/prelude_lower.isle line 531.
                    return v17;
                }
                &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                    inst1: ref v18,
                    inst2: ref v19,
                    result: v20,
                } => {
                    let v15 = C::emit(ctx, v12);
                    let v21 = C::emit(ctx, v18);
                    let v22 = C::emit(ctx, v19);
                    // Rule at src/prelude_lower.isle line 537.
                    return v20;
                }
                &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                    inst1: ref v23,
                    inst2: ref v24,
                    inst3: ref v25,
                    inst4: ref v26,
                    result: v27,
                } => {
                    let v15 = C::emit(ctx, v12);
                    let v28 = C::emit(ctx, v23);
                    let v29 = C::emit(ctx, v24);
                    let v30 = C::emit(ctx, v25);
                    let v31 = C::emit(ctx, v26);
                    // Rule at src/prelude_lower.isle line 549.
                    return v27;
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsTwiceSideEffect {
            inst1: ref v32,
            inst2: ref v33,
        } => {
            match arg1 {
                &ConsumesFlags::ConsumesFlagsReturnsReg {
                    inst: ref v13,
                    result: v14,
                } => {
                    let v34 = C::emit(ctx, v32);
                    let v35 = C::emit(ctx, v33);
                    let v36 = C::emit(ctx, v13);
                    let v37 = C::value_reg(ctx, v14);
                    // Rule at src/prelude_lower.isle line 565.
                    return v37;
                }
                &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                    inst1: ref v18,
                    inst2: ref v19,
                    result: v20,
                } => {
                    let v34 = C::emit(ctx, v32);
                    let v35 = C::emit(ctx, v33);
                    let v38 = C::emit(ctx, v18);
                    let v39 = C::emit(ctx, v19);
                    // Rule at src/prelude_lower.isle line 572.
                    return v20;
                }
                &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                    inst1: ref v23,
                    inst2: ref v24,
                    inst3: ref v25,
                    inst4: ref v26,
                    result: v27,
                } => {
                    let v34 = C::emit(ctx, v32);
                    let v35 = C::emit(ctx, v33);
                    let v40 = C::emit(ctx, v23);
                    let v41 = C::emit(ctx, v24);
                    let v42 = C::emit(ctx, v25);
                    let v43 = C::emit(ctx, v26);
                    // Rule at src/prelude_lower.isle line 585.
                    return v27;
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsReturnsResultWithConsumer {
            inst: ref v1,
            result: v2,
        } => {
            match arg1 {
                &ConsumesFlags::ConsumesFlagsSideEffect { inst: ref v9 } => {
                    let v6 = C::emit(ctx, v1);
                    let v10 = C::emit(ctx, v9);
                    let v11 = C::value_reg(ctx, v2);
                    // Rule at src/prelude_lower.isle line 525.
                    return v11;
                }
                &ConsumesFlags::ConsumesFlagsReturnsResultWithProducer {
                    inst: ref v4,
                    result: v5,
                } => {
                    let v6 = C::emit(ctx, v1);
                    let v7 = C::emit(ctx, v4);
                    let v8 = C::value_regs(ctx, v2, v5);
                    // Rule at src/prelude_lower.isle line 517.
                    return v8;
                }
                _ => {}
            }
        }
        _ => {}
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "with_flags", "src/prelude_lower.isle line 515"
    )
}

// Generated as internal constructor for term with_flags_reg.
pub fn constructor_with_flags_reg<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
    arg1: &ConsumesFlags,
) -> Reg {
    let v2 = constructor_with_flags(ctx, arg0, arg1);
    let v4 = C::value_regs_get(ctx, v2, 0x0_usize);
    // Rule at src/prelude_lower.isle line 603.
    return v4;
}

// Generated as internal constructor for term flags_to_producesflags.
pub fn constructor_flags_to_producesflags<C: Context>(ctx: &mut C, arg0: Value) -> ProducesFlags {
    let v1 = C::mark_value_used(ctx, arg0);
    // Rule at src/prelude_lower.isle line 610.
    return ProducesFlags::AlreadyExistingFlags;
}

// Generated as internal constructor for term with_flags_side_effect.
pub fn constructor_with_flags_side_effect<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
    arg1: &ConsumesFlags,
) -> SideEffectNoResult {
    match arg0 {
        &ProducesFlags::AlreadyExistingFlags => {
            match arg1 {
                &ConsumesFlags::ConsumesFlagsSideEffect { inst: ref v2 } => {
                    let v3 = SideEffectNoResult::Inst { inst: v2.clone() };
                    // Rule at src/prelude_lower.isle line 621.
                    return v3;
                }
                &ConsumesFlags::ConsumesFlagsSideEffect2 {
                    inst1: ref v4,
                    inst2: ref v5,
                } => {
                    let v6 = SideEffectNoResult::Inst2 {
                        inst1: v4.clone(),
                        inst2: v5.clone(),
                    };
                    // Rule at src/prelude_lower.isle line 626.
                    return v6;
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsSideEffect { inst: ref v7 } => {
            match arg1 {
                &ConsumesFlags::ConsumesFlagsSideEffect { inst: ref v2 } => {
                    let v8 = SideEffectNoResult::Inst2 {
                        inst1: v7.clone(),
                        inst2: v2.clone(),
                    };
                    // Rule at src/prelude_lower.isle line 631.
                    return v8;
                }
                &ConsumesFlags::ConsumesFlagsSideEffect2 {
                    inst1: ref v4,
                    inst2: ref v5,
                } => {
                    let v9 = SideEffectNoResult::Inst3 {
                        inst1: v7.clone(),
                        inst2: v4.clone(),
                        inst3: v5.clone(),
                    };
                    // Rule at src/prelude_lower.isle line 636.
                    return v9;
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsTwiceSideEffect {
            inst1: ref v10,
            inst2: ref v11,
        } => {
            if let &ConsumesFlags::ConsumesFlagsSideEffect { inst: ref v2 } = arg1 {
                let v12 = SideEffectNoResult::Inst3 {
                    inst1: v10.clone(),
                    inst2: v11.clone(),
                    inst3: v2.clone(),
                };
                // Rule at src/prelude_lower.isle line 641.
                return v12;
            }
        }
        _ => {}
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "with_flags_side_effect", "src/prelude_lower.isle line 619"
    )
}

// Generated as internal constructor for term with_flags_chained.
pub fn constructor_with_flags_chained<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
    arg1: &ConsumesAndProducesFlags,
    arg2: &ConsumesFlags,
) -> MultiReg {
    match arg0 {
        &ProducesFlags::ProducesFlagsSideEffect { inst: ref v1 } => {
            match arg1 {
                &ConsumesAndProducesFlags::SideEffect { inst: ref v3 } => {
                    match arg2 {
                        &ConsumesFlags::ConsumesFlagsSideEffect { inst: ref v5 } => {
                            let v6 = C::emit(ctx, v1);
                            let v7 = C::emit(ctx, v3);
                            let v8 = C::emit(ctx, v5);
                            // Rule at src/prelude_lower.isle line 650.
                            return MultiReg::Empty;
                        }
                        &ConsumesFlags::ConsumesFlagsSideEffect2 {
                            inst1: ref v10,
                            inst2: ref v11,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v7 = C::emit(ctx, v3);
                            let v12 = C::emit(ctx, v10);
                            let v13 = C::emit(ctx, v11);
                            // Rule at src/prelude_lower.isle line 658.
                            return MultiReg::Empty;
                        }
                        &ConsumesFlags::ConsumesFlagsReturnsReg {
                            inst: ref v14,
                            result: v15,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v7 = C::emit(ctx, v3);
                            let v16 = C::emit(ctx, v14);
                            let v17 = MultiReg::One { a: v15 };
                            // Rule at src/prelude_lower.isle line 667.
                            return v17;
                        }
                        &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                            inst1: ref v18,
                            inst2: ref v19,
                            result: v20,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v7 = C::emit(ctx, v3);
                            let v21 = C::emit(ctx, v18);
                            let v22 = C::emit(ctx, v19);
                            let v24 = C::value_regs_get(ctx, v20, 0x0_usize);
                            let v26 = C::value_regs_get(ctx, v20, 0x1_usize);
                            let v27 = MultiReg::Two { a: v24, b: v26 };
                            // Rule at src/prelude_lower.isle line 675.
                            return v27;
                        }
                        &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                            inst1: ref v28,
                            inst2: ref v29,
                            inst3: ref v30,
                            inst4: ref v31,
                            result: v32,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v7 = C::emit(ctx, v3);
                            let v33 = C::emit(ctx, v28);
                            let v34 = C::emit(ctx, v29);
                            let v35 = C::emit(ctx, v30);
                            let v36 = C::emit(ctx, v31);
                            let v37 = C::value_regs_get(ctx, v32, 0x0_usize);
                            let v38 = C::value_regs_get(ctx, v32, 0x1_usize);
                            let v39 = MultiReg::Two { a: v37, b: v38 };
                            // Rule at src/prelude_lower.isle line 684.
                            return v39;
                        }
                        _ => {}
                    }
                }
                &ConsumesAndProducesFlags::ReturnsReg {
                    inst: ref v47,
                    result: v48,
                } => {
                    match arg2 {
                        &ConsumesFlags::ConsumesFlagsSideEffect { inst: ref v5 } => {
                            let v6 = C::emit(ctx, v1);
                            let v49 = C::emit(ctx, v47);
                            let v8 = C::emit(ctx, v5);
                            let v50 = MultiReg::One { a: v48 };
                            // Rule at src/prelude_lower.isle line 744.
                            return v50;
                        }
                        &ConsumesFlags::ConsumesFlagsSideEffect2 {
                            inst1: ref v10,
                            inst2: ref v11,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v49 = C::emit(ctx, v47);
                            let v12 = C::emit(ctx, v10);
                            let v13 = C::emit(ctx, v11);
                            let v50 = MultiReg::One { a: v48 };
                            // Rule at src/prelude_lower.isle line 752.
                            return v50;
                        }
                        &ConsumesFlags::ConsumesFlagsReturnsReg {
                            inst: ref v14,
                            result: v15,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v49 = C::emit(ctx, v47);
                            let v16 = C::emit(ctx, v14);
                            let v51 = MultiReg::Two { a: v48, b: v15 };
                            // Rule at src/prelude_lower.isle line 761.
                            return v51;
                        }
                        &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                            inst1: ref v18,
                            inst2: ref v19,
                            result: v20,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v49 = C::emit(ctx, v47);
                            let v21 = C::emit(ctx, v18);
                            let v22 = C::emit(ctx, v19);
                            let v24 = C::value_regs_get(ctx, v20, 0x0_usize);
                            let v26 = C::value_regs_get(ctx, v20, 0x1_usize);
                            let v52 = MultiReg::Three {
                                a: v48,
                                b: v24,
                                c: v26,
                            };
                            // Rule at src/prelude_lower.isle line 769.
                            return v52;
                        }
                        &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                            inst1: ref v28,
                            inst2: ref v29,
                            inst3: ref v30,
                            inst4: ref v31,
                            result: v32,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v49 = C::emit(ctx, v47);
                            let v33 = C::emit(ctx, v28);
                            let v34 = C::emit(ctx, v29);
                            let v35 = C::emit(ctx, v30);
                            let v36 = C::emit(ctx, v31);
                            let v37 = C::value_regs_get(ctx, v32, 0x0_usize);
                            let v38 = C::value_regs_get(ctx, v32, 0x1_usize);
                            let v53 = MultiReg::Three {
                                a: v48,
                                b: v37,
                                c: v38,
                            };
                            // Rule at src/prelude_lower.isle line 778.
                            return v53;
                        }
                        _ => {}
                    }
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsReturnsReg {
            inst: ref v40,
            result: v41,
        } => {
            match arg1 {
                &ConsumesAndProducesFlags::SideEffect { inst: ref v3 } => {
                    match arg2 {
                        &ConsumesFlags::ConsumesFlagsSideEffect { inst: ref v5 } => {
                            let v42 = C::emit(ctx, v40);
                            let v7 = C::emit(ctx, v3);
                            let v8 = C::emit(ctx, v5);
                            let v43 = MultiReg::One { a: v41 };
                            // Rule at src/prelude_lower.isle line 697.
                            return v43;
                        }
                        &ConsumesFlags::ConsumesFlagsSideEffect2 {
                            inst1: ref v10,
                            inst2: ref v11,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v7 = C::emit(ctx, v3);
                            let v12 = C::emit(ctx, v10);
                            let v13 = C::emit(ctx, v11);
                            let v43 = MultiReg::One { a: v41 };
                            // Rule at src/prelude_lower.isle line 705.
                            return v43;
                        }
                        &ConsumesFlags::ConsumesFlagsReturnsReg {
                            inst: ref v14,
                            result: v15,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v7 = C::emit(ctx, v3);
                            let v16 = C::emit(ctx, v14);
                            let v44 = MultiReg::Two { a: v41, b: v15 };
                            // Rule at src/prelude_lower.isle line 714.
                            return v44;
                        }
                        &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                            inst1: ref v18,
                            inst2: ref v19,
                            result: v20,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v7 = C::emit(ctx, v3);
                            let v21 = C::emit(ctx, v18);
                            let v22 = C::emit(ctx, v19);
                            let v24 = C::value_regs_get(ctx, v20, 0x0_usize);
                            let v26 = C::value_regs_get(ctx, v20, 0x1_usize);
                            let v45 = MultiReg::Three {
                                a: v41,
                                b: v24,
                                c: v26,
                            };
                            // Rule at src/prelude_lower.isle line 722.
                            return v45;
                        }
                        &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                            inst1: ref v28,
                            inst2: ref v29,
                            inst3: ref v30,
                            inst4: ref v31,
                            result: v32,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v7 = C::emit(ctx, v3);
                            let v33 = C::emit(ctx, v28);
                            let v34 = C::emit(ctx, v29);
                            let v35 = C::emit(ctx, v30);
                            let v36 = C::emit(ctx, v31);
                            let v37 = C::value_regs_get(ctx, v32, 0x0_usize);
                            let v38 = C::value_regs_get(ctx, v32, 0x1_usize);
                            let v46 = MultiReg::Three {
                                a: v41,
                                b: v37,
                                c: v38,
                            };
                            // Rule at src/prelude_lower.isle line 731.
                            return v46;
                        }
                        _ => {}
                    }
                }
                &ConsumesAndProducesFlags::ReturnsReg {
                    inst: ref v47,
                    result: v48,
                } => {
                    match arg2 {
                        &ConsumesFlags::ConsumesFlagsSideEffect { inst: ref v5 } => {
                            let v42 = C::emit(ctx, v40);
                            let v49 = C::emit(ctx, v47);
                            let v8 = C::emit(ctx, v5);
                            let v54 = MultiReg::Two { a: v41, b: v48 };
                            // Rule at src/prelude_lower.isle line 791.
                            return v54;
                        }
                        &ConsumesFlags::ConsumesFlagsSideEffect2 {
                            inst1: ref v10,
                            inst2: ref v11,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v49 = C::emit(ctx, v47);
                            let v12 = C::emit(ctx, v10);
                            let v13 = C::emit(ctx, v11);
                            let v54 = MultiReg::Two { a: v41, b: v48 };
                            // Rule at src/prelude_lower.isle line 799.
                            return v54;
                        }
                        &ConsumesFlags::ConsumesFlagsReturnsReg {
                            inst: ref v14,
                            result: v15,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v49 = C::emit(ctx, v47);
                            let v16 = C::emit(ctx, v14);
                            let v55 = MultiReg::Three {
                                a: v41,
                                b: v48,
                                c: v15,
                            };
                            // Rule at src/prelude_lower.isle line 808.
                            return v55;
                        }
                        &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                            inst1: ref v18,
                            inst2: ref v19,
                            result: v20,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v49 = C::emit(ctx, v47);
                            let v21 = C::emit(ctx, v18);
                            let v22 = C::emit(ctx, v19);
                            let v24 = C::value_regs_get(ctx, v20, 0x0_usize);
                            let v26 = C::value_regs_get(ctx, v20, 0x1_usize);
                            let v56 = MultiReg::Four {
                                a: v41,
                                b: v48,
                                c: v24,
                                d: v26,
                            };
                            // Rule at src/prelude_lower.isle line 816.
                            return v56;
                        }
                        &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                            inst1: ref v28,
                            inst2: ref v29,
                            inst3: ref v30,
                            inst4: ref v31,
                            result: v32,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v49 = C::emit(ctx, v47);
                            let v33 = C::emit(ctx, v28);
                            let v34 = C::emit(ctx, v29);
                            let v35 = C::emit(ctx, v30);
                            let v36 = C::emit(ctx, v31);
                            let v37 = C::value_regs_get(ctx, v32, 0x0_usize);
                            let v38 = C::value_regs_get(ctx, v32, 0x1_usize);
                            let v57 = MultiReg::Four {
                                a: v41,
                                b: v48,
                                c: v37,
                                d: v38,
                            };
                            // Rule at src/prelude_lower.isle line 825.
                            return v57;
                        }
                        _ => {}
                    }
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsReturnsResultWithConsumer {
            inst: ref v58,
            result: v59,
        } => {
            if let &ConsumesAndProducesFlags::ReturnsReg {
                inst: ref v47,
                result: v48,
            } = arg1
            {
                match arg2 {
                    &ConsumesFlags::ConsumesFlagsSideEffect { inst: ref v5 } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v8 = C::emit(ctx, v5);
                        let v61 = MultiReg::Two { a: v59, b: v48 };
                        // Rule at src/prelude_lower.isle line 837.
                        return v61;
                    }
                    &ConsumesFlags::ConsumesFlagsSideEffect2 {
                        inst1: ref v10,
                        inst2: ref v11,
                    } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v12 = C::emit(ctx, v10);
                        let v13 = C::emit(ctx, v11);
                        let v61 = MultiReg::Two { a: v59, b: v48 };
                        // Rule at src/prelude_lower.isle line 845.
                        return v61;
                    }
                    &ConsumesFlags::ConsumesFlagsReturnsResultWithProducer {
                        inst: ref v63,
                        result: v64,
                    } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v65 = C::emit(ctx, v63);
                        let v66 = MultiReg::Three {
                            a: v59,
                            b: v48,
                            c: v64,
                        };
                        // Rule at src/prelude_lower.isle line 862.
                        return v66;
                    }
                    &ConsumesFlags::ConsumesFlagsReturnsReg {
                        inst: ref v14,
                        result: v15,
                    } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v16 = C::emit(ctx, v14);
                        let v62 = MultiReg::Three {
                            a: v59,
                            b: v48,
                            c: v15,
                        };
                        // Rule at src/prelude_lower.isle line 854.
                        return v62;
                    }
                    &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                        inst1: ref v18,
                        inst2: ref v19,
                        result: v20,
                    } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v21 = C::emit(ctx, v18);
                        let v22 = C::emit(ctx, v19);
                        let v24 = C::value_regs_get(ctx, v20, 0x0_usize);
                        let v26 = C::value_regs_get(ctx, v20, 0x1_usize);
                        let v67 = MultiReg::Four {
                            a: v59,
                            b: v48,
                            c: v24,
                            d: v26,
                        };
                        // Rule at src/prelude_lower.isle line 870.
                        return v67;
                    }
                    &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                        inst1: ref v28,
                        inst2: ref v29,
                        inst3: ref v30,
                        inst4: ref v31,
                        result: v32,
                    } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v33 = C::emit(ctx, v28);
                        let v34 = C::emit(ctx, v29);
                        let v35 = C::emit(ctx, v30);
                        let v36 = C::emit(ctx, v31);
                        let v37 = C::value_regs_get(ctx, v32, 0x0_usize);
                        let v38 = C::value_regs_get(ctx, v32, 0x1_usize);
                        let v68 = MultiReg::Four {
                            a: v59,
                            b: v48,
                            c: v37,
                            d: v38,
                        };
                        // Rule at src/prelude_lower.isle line 879.
                        return v68;
                    }
                    _ => {}
                }
            }
        }
        _ => {}
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "with_flags_chained", "src/prelude_lower.isle line 647"
    )
}

// Generated as internal constructor for term lower_return.
pub fn constructor_lower_return<C: Context>(ctx: &mut C, arg0: ValueSlice) -> InstOutput {
    let v1 = C::gen_return(ctx, arg0);
    let v2 = C::output_none(ctx);
    // Rule at src/prelude_lower.isle line 1082.
    return v2;
}

// Generated as internal constructor for term ty_to_operand_size.
pub fn constructor_ty_to_operand_size<C: Context>(ctx: &mut C, arg0: Type) -> OperandSize {
    match arg0 {
        I32 => {
            // Rule at src/isa/pulley_shared/inst.isle line 5.
            return OperandSize::Size32;
        }
        I64 => {
            // Rule at src/isa/pulley_shared/inst.isle line 6.
            return OperandSize::Size64;
        }
        _ => {}
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "ty_to_operand_size", "src/isa/pulley_shared/inst.isle line 4"
    )
}

// Generated as internal constructor for term raw_inst_to_inst.
pub fn constructor_raw_inst_to_inst<C: Context>(ctx: &mut C, arg0: &RawInst) -> MInst {
    let v1 = MInst::Raw { raw: arg0.clone() };
    // Rule at src/isa/pulley_shared/inst.isle line 122.
    return v1;
}

// Generated as internal constructor for term put_in_xreg.
pub fn constructor_put_in_xreg<C: Context>(ctx: &mut C, arg0: Value) -> XReg {
    let v1 = C::put_in_reg(ctx, arg0);
    let v2 = C::xreg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 171.
    return v2;
}

// Generated as internal constructor for term output_xreg.
pub fn constructor_output_xreg<C: Context>(ctx: &mut C, arg0: XReg) -> InstOutput {
    let v1 = C::xreg_to_reg(ctx, arg0);
    let v2 = constructor_output_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 176.
    return v2;
}

// Generated as internal constructor for term writable_xreg_to_reg.
pub fn constructor_writable_xreg_to_reg<C: Context>(ctx: &mut C, arg0: WritableXReg) -> Reg {
    let v1 = C::writable_xreg_to_writable_reg(ctx, arg0);
    let v2 = C::writable_reg_to_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 191.
    return v2;
}

// Generated as internal constructor for term xreg_to_value_regs.
pub fn constructor_xreg_to_value_regs<C: Context>(ctx: &mut C, arg0: XReg) -> ValueRegs {
    let v1 = C::xreg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 201.
    return v2;
}

// Generated as internal constructor for term writable_xreg_to_value_regs.
pub fn constructor_writable_xreg_to_value_regs<C: Context>(
    ctx: &mut C,
    arg0: WritableXReg,
) -> ValueRegs {
    let v1 = constructor_writable_xreg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 206.
    return v2;
}

// Generated as internal constructor for term temp_writable_xreg.
pub fn constructor_temp_writable_xreg<C: Context>(ctx: &mut C) -> WritableXReg {
    let v1 = C::temp_writable_reg(ctx, I64);
    let v2 = C::writable_xreg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 211.
    return v2;
}

// Generated as internal constructor for term put_in_freg.
pub fn constructor_put_in_freg<C: Context>(ctx: &mut C, arg0: Value) -> FReg {
    let v1 = C::put_in_reg(ctx, arg0);
    let v2 = C::freg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 231.
    return v2;
}

// Generated as internal constructor for term output_freg.
pub fn constructor_output_freg<C: Context>(ctx: &mut C, arg0: FReg) -> InstOutput {
    let v1 = C::freg_to_reg(ctx, arg0);
    let v2 = constructor_output_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 236.
    return v2;
}

// Generated as internal constructor for term writable_freg_to_reg.
pub fn constructor_writable_freg_to_reg<C: Context>(ctx: &mut C, arg0: WritableFReg) -> Reg {
    let v1 = C::writable_freg_to_writable_reg(ctx, arg0);
    let v2 = C::writable_reg_to_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 251.
    return v2;
}

// Generated as internal constructor for term freg_to_value_regs.
pub fn constructor_freg_to_value_regs<C: Context>(ctx: &mut C, arg0: FReg) -> ValueRegs {
    let v1 = C::freg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 261.
    return v2;
}

// Generated as internal constructor for term writable_freg_to_value_regs.
pub fn constructor_writable_freg_to_value_regs<C: Context>(
    ctx: &mut C,
    arg0: WritableFReg,
) -> ValueRegs {
    let v1 = constructor_writable_freg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 266.
    return v2;
}

// Generated as internal constructor for term temp_writable_freg.
pub fn constructor_temp_writable_freg<C: Context>(ctx: &mut C) -> WritableFReg {
    let v1 = C::temp_writable_reg(ctx, F64);
    let v2 = C::writable_freg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 271.
    return v2;
}

// Generated as internal constructor for term put_in_vreg.
pub fn constructor_put_in_vreg<C: Context>(ctx: &mut C, arg0: Value) -> VReg {
    let v1 = C::put_in_reg(ctx, arg0);
    let v2 = C::vreg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 291.
    return v2;
}

// Generated as internal constructor for term output_vreg.
pub fn constructor_output_vreg<C: Context>(ctx: &mut C, arg0: VReg) -> InstOutput {
    let v1 = C::vreg_to_reg(ctx, arg0);
    let v2 = constructor_output_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 296.
    return v2;
}

// Generated as internal constructor for term writable_vreg_to_reg.
pub fn constructor_writable_vreg_to_reg<C: Context>(ctx: &mut C, arg0: WritableVReg) -> Reg {
    let v1 = C::writable_vreg_to_writable_reg(ctx, arg0);
    let v2 = C::writable_reg_to_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 311.
    return v2;
}

// Generated as internal constructor for term vreg_to_value_regs.
pub fn constructor_vreg_to_value_regs<C: Context>(ctx: &mut C, arg0: VReg) -> ValueRegs {
    let v1 = C::vreg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 321.
    return v2;
}

// Generated as internal constructor for term writable_vreg_to_value_regs.
pub fn constructor_writable_vreg_to_value_regs<C: Context>(
    ctx: &mut C,
    arg0: WritableVReg,
) -> ValueRegs {
    let v1 = constructor_writable_vreg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 326.
    return v2;
}

// Generated as internal constructor for term temp_writable_vreg.
pub fn constructor_temp_writable_vreg<C: Context>(ctx: &mut C) -> WritableVReg {
    let v1 = C::temp_writable_reg(ctx, I8X16);
    let v2 = C::writable_vreg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 331.
    return v2;
}

// Generated as internal constructor for term imm.
pub fn constructor_imm<C: Context>(ctx: &mut C, arg0: Type, arg1: u64) -> Reg {
    let v1 = C::ty_int(ctx, arg0);
    if let Some(v2) = v1 {
        let v4 = C::i8_try_from_u64(ctx, arg1);
        if let Some(v5) = v4 {
            let v6 = constructor_pulley_xconst8(ctx, v5);
            let v7 = C::xreg_to_reg(ctx, v6);
            // Rule at src/isa/pulley_shared/inst.isle line 339.
            return v7;
        }
        let v8 = C::i16_try_from_u64(ctx, arg1);
        if let Some(v9) = v8 {
            let v10 = constructor_pulley_xconst16(ctx, v9);
            let v11 = C::xreg_to_reg(ctx, v10);
            // Rule at src/isa/pulley_shared/inst.isle line 344.
            return v11;
        }
        let v12 = C::i32_try_from_u64(ctx, arg1);
        if let Some(v13) = v12 {
            let v14 = constructor_pulley_xconst32(ctx, v13);
            let v15 = C::xreg_to_reg(ctx, v14);
            // Rule at src/isa/pulley_shared/inst.isle line 349.
            return v15;
        }
    }
    match arg0 {
        I8 => {
            let v16 = C::u64_as_u8(ctx, arg1);
            let v17 = C::u8_as_i8(ctx, v16);
            let v18 = constructor_pulley_xconst8(ctx, v17);
            let v19 = C::xreg_to_reg(ctx, v18);
            // Rule at src/isa/pulley_shared/inst.isle line 354.
            return v19;
        }
        I16 => {
            let v20 = C::u64_as_u16(ctx, arg1);
            let v21 = C::u16_as_i16(ctx, v20);
            let v22 = constructor_pulley_xconst16(ctx, v21);
            let v23 = C::xreg_to_reg(ctx, v22);
            // Rule at src/isa/pulley_shared/inst.isle line 355.
            return v23;
        }
        I32 => {
            let v24 = C::u64_as_i32(ctx, arg1);
            let v25 = constructor_pulley_xconst32(ctx, v24);
            let v26 = C::xreg_to_reg(ctx, v25);
            // Rule at src/isa/pulley_shared/inst.isle line 356.
            return v26;
        }
        I64 => {
            let v27 = C::u64_as_i64(ctx, arg1);
            let v28 = constructor_pulley_xconst64(ctx, v27);
            let v29 = C::xreg_to_reg(ctx, v28);
            // Rule at src/isa/pulley_shared/inst.isle line 357.
            return v29;
        }
        F32 => {
            let v31 = constructor_imm(ctx, I32, arg1);
            let v33 = constructor_gen_bitcast(ctx, v31, I32, F32);
            // Rule at src/isa/pulley_shared/inst.isle line 360.
            return v33;
        }
        F64 => {
            let v35 = constructor_imm(ctx, I64, arg1);
            let v37 = constructor_gen_bitcast(ctx, v35, I64, F64);
            // Rule at src/isa/pulley_shared/inst.isle line 361.
            return v37;
        }
        _ => {}
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "imm", "src/isa/pulley_shared/inst.isle line 336"
    )
}

// Generated as internal constructor for term gen_bitcast.
pub fn constructor_gen_bitcast<C: Context>(ctx: &mut C, arg0: Reg, arg1: Type, arg2: Type) -> Reg {
    match arg1 {
        I32 => {
            if arg2 == F32 {
                let v8 = C::freg_new(ctx, arg0);
                let v9 = constructor_pulley_bitcast_int_from_float_32(ctx, v8);
                let v10 = C::xreg_to_reg(ctx, v9);
                // Rule at src/isa/pulley_shared/inst.isle line 369.
                return v10;
            }
        }
        I64 => {
            if arg2 == F64 {
                let v8 = C::freg_new(ctx, arg0);
                let v11 = constructor_pulley_bitcast_int_from_float_64(ctx, v8);
                let v12 = C::xreg_to_reg(ctx, v11);
                // Rule at src/isa/pulley_shared/inst.isle line 370.
                return v12;
            }
        }
        F32 => {
            if arg2 == I32 {
                let v3 = C::xreg_new(ctx, arg0);
                let v4 = constructor_pulley_bitcast_float_from_int_32(ctx, v3);
                let v5 = C::freg_to_reg(ctx, v4);
                // Rule at src/isa/pulley_shared/inst.isle line 367.
                return v5;
            }
        }
        F64 => {
            if arg2 == I64 {
                let v3 = C::xreg_new(ctx, arg0);
                let v6 = constructor_pulley_bitcast_float_from_int_64(ctx, v3);
                let v7 = C::freg_to_reg(ctx, v6);
                // Rule at src/isa/pulley_shared/inst.isle line 368.
                return v7;
            }
        }
        _ => {}
    }
    if arg1 == arg2 {
        // Rule at src/isa/pulley_shared/inst.isle line 371.
        return arg0;
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "gen_bitcast", "src/isa/pulley_shared/inst.isle line 366"
    )
}

// Generated as internal constructor for term pulley_trap_if.
pub fn constructor_pulley_trap_if<C: Context>(
    ctx: &mut C,
    arg0: &Cond,
    arg1: &TrapCode,
) -> SideEffectNoResult {
    let v2 = MInst::TrapIf {
        cond: arg0.clone(),
        code: arg1.clone(),
    };
    let v3 = SideEffectNoResult::Inst { inst: v2 };
    // Rule at src/isa/pulley_shared/inst.isle line 376.
    return v3;
}

// Generated as internal constructor for term pulley_get_special.
pub fn constructor_pulley_get_special<C: Context>(ctx: &mut C, arg0: XReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = MInst::GetSpecial { dst: v1, reg: arg0 };
    let v3 = C::emit(ctx, &v2);
    let v4 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 389.
    return v4;
}

// Generated as internal constructor for term pulley_jump.
pub fn constructor_pulley_jump<C: Context>(ctx: &mut C, arg0: MachLabel) -> SideEffectNoResult {
    let v1 = MInst::Jump { label: arg0 };
    let v2 = SideEffectNoResult::Inst { inst: v1 };
    // Rule at src/isa/pulley_shared/inst.isle line 395.
    return v2;
}

// Generated as internal constructor for term pulley_br_if.
pub fn constructor_pulley_br_if<C: Context>(
    ctx: &mut C,
    arg0: &Cond,
    arg1: MachLabel,
    arg2: MachLabel,
) -> SideEffectNoResult {
    let v3 = MInst::BrIf {
        cond: arg0.clone(),
        taken: arg1,
        not_taken: arg2,
    };
    let v4 = SideEffectNoResult::Inst { inst: v3 };
    // Rule at src/isa/pulley_shared/inst.isle line 399.
    return v4;
}

// Generated as internal constructor for term pulley_xload.
pub fn constructor_pulley_xload<C: Context>(
    ctx: &mut C,
    arg0: &Amode,
    arg1: Type,
    arg2: MemFlags,
    arg3: &ExtKind,
) -> XReg {
    let v4 = constructor_temp_writable_xreg(ctx);
    let v5 = MInst::XLoad {
        dst: v4,
        mem: arg0.clone(),
        ty: arg1,
        flags: arg2,
        ext: arg3.clone(),
    };
    let v6 = C::emit(ctx, &v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v4);
    // Rule at src/isa/pulley_shared/inst.isle line 403.
    return v7;
}

// Generated as internal constructor for term pulley_xstore.
pub fn constructor_pulley_xstore<C: Context>(
    ctx: &mut C,
    arg0: &Amode,
    arg1: XReg,
    arg2: Type,
    arg3: MemFlags,
) -> SideEffectNoResult {
    let v4 = MInst::XStore {
        mem: arg0.clone(),
        src: arg1,
        ty: arg2,
        flags: arg3,
    };
    let v5 = SideEffectNoResult::Inst { inst: v4 };
    // Rule at src/isa/pulley_shared/inst.isle line 409.
    return v5;
}

// Generated as internal constructor for term pulley_fload.
pub fn constructor_pulley_fload<C: Context>(
    ctx: &mut C,
    arg0: &Amode,
    arg1: Type,
    arg2: MemFlags,
) -> FReg {
    let v3 = constructor_temp_writable_freg(ctx);
    let v4 = MInst::FLoad {
        dst: v3,
        mem: arg0.clone(),
        ty: arg1,
        flags: arg2,
    };
    let v5 = C::emit(ctx, &v4);
    let v6 = C::writable_freg_to_freg(ctx, v3);
    // Rule at src/isa/pulley_shared/inst.isle line 413.
    return v6;
}

// Generated as internal constructor for term pulley_fstore.
pub fn constructor_pulley_fstore<C: Context>(
    ctx: &mut C,
    arg0: &Amode,
    arg1: FReg,
    arg2: Type,
    arg3: MemFlags,
) -> SideEffectNoResult {
    let v4 = MInst::FStore {
        mem: arg0.clone(),
        src: arg1,
        ty: arg2,
        flags: arg3,
    };
    let v5 = SideEffectNoResult::Inst { inst: v4 };
    // Rule at src/isa/pulley_shared/inst.isle line 419.
    return v5;
}

// Generated as internal constructor for term gen_br_table.
pub fn constructor_gen_br_table<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: MachLabel,
    arg2: &BoxVecMachLabel,
) -> Unit {
    let v3 = MInst::BrTable {
        idx: arg0,
        default: arg1,
        targets: arg2.clone(),
    };
    let v4 = C::emit(ctx, &v3);
    // Rule at src/isa/pulley_shared/inst.isle line 423.
    return v4;
}

// Generated as internal constructor for term lower.
pub fn constructor_lower<C: Context>(ctx: &mut C, arg0: Inst) -> Option<InstOutput> {
    let v1 = &C::inst_data(ctx, arg0);
    match v1 {
        &InstructionData::Binary {
            opcode: ref v81,
            args: ref v82,
        } => {
            match v81 {
                &Opcode::Iadd => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I8 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v88 = constructor_pulley_xadd32(ctx, v86, v87);
                                let v89 = constructor_output_xreg(ctx, v88);
                                let v90 = Some(v89);
                                // Rule at src/isa/pulley_shared/lower.isle line 135.
                                return v90;
                            }
                            I16 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v88 = constructor_pulley_xadd32(ctx, v86, v87);
                                let v89 = constructor_output_xreg(ctx, v88);
                                let v90 = Some(v89);
                                // Rule at src/isa/pulley_shared/lower.isle line 138.
                                return v90;
                            }
                            I32 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v88 = constructor_pulley_xadd32(ctx, v86, v87);
                                let v89 = constructor_output_xreg(ctx, v88);
                                let v90 = Some(v89);
                                // Rule at src/isa/pulley_shared/lower.isle line 141.
                                return v90;
                            }
                            I64 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v91 = constructor_pulley_xadd64(ctx, v86, v87);
                                let v92 = constructor_output_xreg(ctx, v91);
                                let v93 = Some(v92);
                                // Rule at src/isa/pulley_shared/lower.isle line 144.
                                return v93;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Isub => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I8 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v94 = constructor_pulley_xsub32(ctx, v86, v87);
                                let v95 = constructor_output_xreg(ctx, v94);
                                let v96 = Some(v95);
                                // Rule at src/isa/pulley_shared/lower.isle line 149.
                                return v96;
                            }
                            I16 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v94 = constructor_pulley_xsub32(ctx, v86, v87);
                                let v95 = constructor_output_xreg(ctx, v94);
                                let v96 = Some(v95);
                                // Rule at src/isa/pulley_shared/lower.isle line 152.
                                return v96;
                            }
                            I32 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v94 = constructor_pulley_xsub32(ctx, v86, v87);
                                let v95 = constructor_output_xreg(ctx, v94);
                                let v96 = Some(v95);
                                // Rule at src/isa/pulley_shared/lower.isle line 155.
                                return v96;
                            }
                            I64 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v97 = constructor_pulley_xsub64(ctx, v86, v87);
                                let v98 = constructor_output_xreg(ctx, v97);
                                let v99 = Some(v98);
                                // Rule at src/isa/pulley_shared/lower.isle line 158.
                                return v99;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Imul => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I8 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v100 = constructor_pulley_xmul32(ctx, v86, v87);
                                let v101 = constructor_output_xreg(ctx, v100);
                                let v102 = Some(v101);
                                // Rule at src/isa/pulley_shared/lower.isle line 163.
                                return v102;
                            }
                            I16 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v100 = constructor_pulley_xmul32(ctx, v86, v87);
                                let v101 = constructor_output_xreg(ctx, v100);
                                let v102 = Some(v101);
                                // Rule at src/isa/pulley_shared/lower.isle line 164.
                                return v102;
                            }
                            I32 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v100 = constructor_pulley_xmul32(ctx, v86, v87);
                                let v101 = constructor_output_xreg(ctx, v100);
                                let v102 = Some(v101);
                                // Rule at src/isa/pulley_shared/lower.isle line 165.
                                return v102;
                            }
                            I64 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v103 = constructor_pulley_xmul64(ctx, v86, v87);
                                let v104 = constructor_output_xreg(ctx, v103);
                                let v105 = Some(v104);
                                // Rule at src/isa/pulley_shared/lower.isle line 166.
                                return v105;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Udiv => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I32 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v118 = constructor_pulley_xdiv32_u(ctx, v86, v87);
                                let v119 = constructor_output_xreg(ctx, v118);
                                let v120 = Some(v119);
                                // Rule at src/isa/pulley_shared/lower.isle line 180.
                                return v120;
                            }
                            I64 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v121 = constructor_pulley_xdiv64_u(ctx, v86, v87);
                                let v122 = constructor_output_xreg(ctx, v121);
                                let v123 = Some(v122);
                                // Rule at src/isa/pulley_shared/lower.isle line 181.
                                return v123;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Sdiv => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I32 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v106 = constructor_pulley_xdiv32_s(ctx, v86, v87);
                                let v107 = constructor_output_xreg(ctx, v106);
                                let v108 = Some(v107);
                                // Rule at src/isa/pulley_shared/lower.isle line 170.
                                return v108;
                            }
                            I64 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v109 = constructor_pulley_xdiv64_s(ctx, v86, v87);
                                let v110 = constructor_output_xreg(ctx, v109);
                                let v111 = Some(v110);
                                // Rule at src/isa/pulley_shared/lower.isle line 171.
                                return v111;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Urem => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I32 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v124 = constructor_pulley_xrem32_u(ctx, v86, v87);
                                let v125 = constructor_output_xreg(ctx, v124);
                                let v126 = Some(v125);
                                // Rule at src/isa/pulley_shared/lower.isle line 185.
                                return v126;
                            }
                            I64 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v127 = constructor_pulley_xrem64_u(ctx, v86, v87);
                                let v128 = constructor_output_xreg(ctx, v127);
                                let v129 = Some(v128);
                                // Rule at src/isa/pulley_shared/lower.isle line 186.
                                return v129;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Srem => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I32 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v112 = constructor_pulley_xrem32_s(ctx, v86, v87);
                                let v113 = constructor_output_xreg(ctx, v112);
                                let v114 = Some(v113);
                                // Rule at src/isa/pulley_shared/lower.isle line 175.
                                return v114;
                            }
                            I64 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v115 = constructor_pulley_xrem64_s(ctx, v86, v87);
                                let v116 = constructor_output_xreg(ctx, v115);
                                let v117 = Some(v116);
                                // Rule at src/isa/pulley_shared/lower.isle line 176.
                                return v117;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Band => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        if v62 == I64 {
                            let v83 = C::unpack_value_array_2(ctx, v82);
                            let v86 = constructor_put_in_xreg(ctx, v83.0);
                            let v87 = constructor_put_in_xreg(ctx, v83.1);
                            let v153 = constructor_pulley_xband64(ctx, v86, v87);
                            let v154 = constructor_output_xreg(ctx, v153);
                            let v155 = Some(v154);
                            // Rule at src/isa/pulley_shared/lower.isle line 217.
                            return v155;
                        }
                        let v148 = C::fits_in_32(ctx, v62);
                        if let Some(v149) = v148 {
                            let v83 = C::unpack_value_array_2(ctx, v82);
                            let v86 = constructor_put_in_xreg(ctx, v83.0);
                            let v87 = constructor_put_in_xreg(ctx, v83.1);
                            let v150 = constructor_pulley_xband32(ctx, v86, v87);
                            let v151 = constructor_output_xreg(ctx, v150);
                            let v152 = Some(v151);
                            // Rule at src/isa/pulley_shared/lower.isle line 214.
                            return v152;
                        }
                    }
                }
                &Opcode::Bor => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        if v62 == I64 {
                            let v83 = C::unpack_value_array_2(ctx, v82);
                            let v86 = constructor_put_in_xreg(ctx, v83.0);
                            let v87 = constructor_put_in_xreg(ctx, v83.1);
                            let v159 = constructor_pulley_xbor64(ctx, v86, v87);
                            let v160 = constructor_output_xreg(ctx, v159);
                            let v161 = Some(v160);
                            // Rule at src/isa/pulley_shared/lower.isle line 225.
                            return v161;
                        }
                        let v148 = C::fits_in_32(ctx, v62);
                        if let Some(v149) = v148 {
                            let v83 = C::unpack_value_array_2(ctx, v82);
                            let v86 = constructor_put_in_xreg(ctx, v83.0);
                            let v87 = constructor_put_in_xreg(ctx, v83.1);
                            let v156 = constructor_pulley_xbor32(ctx, v86, v87);
                            let v157 = constructor_output_xreg(ctx, v156);
                            let v158 = Some(v157);
                            // Rule at src/isa/pulley_shared/lower.isle line 222.
                            return v158;
                        }
                    }
                }
                &Opcode::Bxor => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        if v62 == I64 {
                            let v83 = C::unpack_value_array_2(ctx, v82);
                            let v86 = constructor_put_in_xreg(ctx, v83.0);
                            let v87 = constructor_put_in_xreg(ctx, v83.1);
                            let v165 = constructor_pulley_xbxor64(ctx, v86, v87);
                            let v166 = constructor_output_xreg(ctx, v165);
                            let v167 = Some(v166);
                            // Rule at src/isa/pulley_shared/lower.isle line 233.
                            return v167;
                        }
                        let v148 = C::fits_in_32(ctx, v62);
                        if let Some(v149) = v148 {
                            let v83 = C::unpack_value_array_2(ctx, v82);
                            let v86 = constructor_put_in_xreg(ctx, v83.0);
                            let v87 = constructor_put_in_xreg(ctx, v83.1);
                            let v162 = constructor_pulley_xbxor32(ctx, v86, v87);
                            let v163 = constructor_output_xreg(ctx, v162);
                            let v164 = Some(v163);
                            // Rule at src/isa/pulley_shared/lower.isle line 230.
                            return v164;
                        }
                    }
                }
                &Opcode::Rotl => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I32 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v189 = constructor_pulley_xrotl32(ctx, v86, v87);
                                let v190 = constructor_output_xreg(ctx, v189);
                                let v191 = Some(v190);
                                // Rule at src/isa/pulley_shared/lower.isle line 253.
                                return v191;
                            }
                            I64 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v192 = constructor_pulley_xrotl64(ctx, v86, v87);
                                let v193 = constructor_output_xreg(ctx, v192);
                                let v194 = Some(v193);
                                // Rule at src/isa/pulley_shared/lower.isle line 254.
                                return v194;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Rotr => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I32 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v195 = constructor_pulley_xrotr32(ctx, v86, v87);
                                let v196 = constructor_output_xreg(ctx, v195);
                                let v197 = Some(v196);
                                // Rule at src/isa/pulley_shared/lower.isle line 258.
                                return v197;
                            }
                            I64 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v198 = constructor_pulley_xrotr64(ctx, v86, v87);
                                let v199 = constructor_output_xreg(ctx, v198);
                                let v200 = Some(v199);
                                // Rule at src/isa/pulley_shared/lower.isle line 259.
                                return v200;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Ishl => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I32 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v130 = constructor_pulley_xshl32(ctx, v86, v87);
                                let v131 = constructor_output_xreg(ctx, v130);
                                let v132 = Some(v131);
                                // Rule at src/isa/pulley_shared/lower.isle line 190.
                                return v132;
                            }
                            I64 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v133 = constructor_pulley_xshl64(ctx, v86, v87);
                                let v134 = constructor_output_xreg(ctx, v133);
                                let v135 = Some(v134);
                                // Rule at src/isa/pulley_shared/lower.isle line 193.
                                return v135;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Ushr => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I32 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v136 = constructor_pulley_xshr32_u(ctx, v86, v87);
                                let v137 = constructor_output_xreg(ctx, v136);
                                let v138 = Some(v137);
                                // Rule at src/isa/pulley_shared/lower.isle line 198.
                                return v138;
                            }
                            I64 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v139 = constructor_pulley_xshr64_u(ctx, v86, v87);
                                let v140 = constructor_output_xreg(ctx, v139);
                                let v141 = Some(v140);
                                // Rule at src/isa/pulley_shared/lower.isle line 201.
                                return v141;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Sshr => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I32 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v142 = constructor_pulley_xshr32_s(ctx, v86, v87);
                                let v143 = constructor_output_xreg(ctx, v142);
                                let v144 = Some(v143);
                                // Rule at src/isa/pulley_shared/lower.isle line 206.
                                return v144;
                            }
                            I64 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v86 = constructor_put_in_xreg(ctx, v83.0);
                                let v87 = constructor_put_in_xreg(ctx, v83.1);
                                let v145 = constructor_pulley_xshr64_s(ctx, v86, v87);
                                let v146 = constructor_output_xreg(ctx, v145);
                                let v147 = Some(v146);
                                // Rule at src/isa/pulley_shared/lower.isle line 209.
                                return v147;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fcopysign => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            F32 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v481 = constructor_put_in_freg(ctx, v83.0);
                                let v482 = constructor_put_in_freg(ctx, v83.1);
                                let v483 = constructor_pulley_fcopysign32(ctx, v481, v482);
                                let v484 = constructor_output_freg(ctx, v483);
                                let v485 = Some(v484);
                                // Rule at src/isa/pulley_shared/lower.isle line 588.
                                return v485;
                            }
                            F64 => {
                                let v83 = C::unpack_value_array_2(ctx, v82);
                                let v481 = constructor_put_in_freg(ctx, v83.0);
                                let v482 = constructor_put_in_freg(ctx, v83.1);
                                let v486 = constructor_pulley_fcopysign64(ctx, v481, v482);
                                let v487 = constructor_output_freg(ctx, v486);
                                let v488 = Some(v487);
                                // Rule at src/isa/pulley_shared/lower.isle line 591.
                                return v488;
                            }
                            _ => {}
                        }
                    }
                }
                _ => {}
            }
        }
        &InstructionData::Call {
            opcode: ref v36,
            args: v37,
            func_ref: v38,
        } => {
            match v36 {
                &Opcode::Call => {
                    let v40 = C::func_ref_data(ctx, v38);
                    let v39 = C::value_list_slice(ctx, v37);
                    let v44 = C::gen_call(ctx, v40.0, v40.1, v40.2, v39);
                    let v45 = Some(v44);
                    // Rule at src/isa/pulley_shared/lower.isle line 104.
                    return v45;
                }
                &Opcode::ReturnCall => {
                    let v40 = C::func_ref_data(ctx, v38);
                    let v39 = C::value_list_slice(ctx, v37);
                    let v56 = C::gen_return_call(ctx, v40.0, v40.1, v40.2, v39);
                    let v57 = Some(v56);
                    // Rule at src/isa/pulley_shared/lower.isle line 112.
                    return v57;
                }
                _ => {}
            }
        }
        &InstructionData::CallIndirect {
            opcode: ref v46,
            args: v47,
            sig_ref: v48,
        } => {
            match v46 {
                &Opcode::CallIndirect => {
                    let v49 = C::value_list_slice(ctx, v47);
                    let v50 = C::value_slice_unwrap(ctx, v49);
                    if let Some(v51) = v50 {
                        let v54 = C::gen_call_indirect(ctx, v48, v51.0, v51.1);
                        let v55 = Some(v54);
                        // Rule at src/isa/pulley_shared/lower.isle line 107.
                        return v55;
                    }
                }
                &Opcode::ReturnCallIndirect => {
                    let v49 = C::value_list_slice(ctx, v47);
                    let v50 = C::value_slice_unwrap(ctx, v49);
                    if let Some(v51) = v50 {
                        let v58 = C::gen_return_call_indirect(ctx, v48, v51.0, v51.1);
                        let v59 = Some(v58);
                        // Rule at src/isa/pulley_shared/lower.isle line 115.
                        return v59;
                    }
                }
                _ => {}
            }
        }
        &InstructionData::CondTrap {
            opcode: ref v7,
            arg: v8,
            code: ref v9,
        } => {
            match v7 {
                &Opcode::Trapz => {
                    let v10 = &constructor_lower_cond(ctx, v8);
                    let v11 = &C::cond_invert(ctx, v10);
                    let v12 = &constructor_pulley_trap_if(ctx, v11, v9);
                    let v13 = constructor_side_effect(ctx, v12);
                    let v14 = Some(v13);
                    // Rule at src/isa/pulley_shared/lower.isle line 75.
                    return v14;
                }
                &Opcode::Trapnz => {
                    let v10 = &constructor_lower_cond(ctx, v8);
                    let v15 = &constructor_pulley_trap_if(ctx, v10, v9);
                    let v16 = constructor_side_effect(ctx, v15);
                    let v17 = Some(v16);
                    // Rule at src/isa/pulley_shared/lower.isle line 78.
                    return v17;
                }
                _ => {}
            }
        }
        &InstructionData::FloatCompare {
            opcode: ref v218,
            args: ref v219,
            cond: ref v220,
        } => {
            if let &Opcode::Fcmp = v218 {
                let v221 = C::unpack_value_array_2(ctx, v219);
                let v224 = C::value_type(ctx, v221.1);
                let v225 = C::ty_scalar_float(ctx, v224);
                if let Some(v226) = v225 {
                    let v227 = constructor_lower_fcmp(ctx, v226, v220, v221.0, v221.1);
                    let v228 = constructor_output_xreg(ctx, v227);
                    let v229 = Some(v228);
                    // Rule at src/isa/pulley_shared/lower.isle line 319.
                    return v229;
                }
            }
        }
        &InstructionData::IntAddTrap {
            opcode: ref v346,
            args: ref v347,
            code: ref v348,
        } => {
            if let &Opcode::UaddOverflowTrap = v346 {
                let v60 = C::first_result(ctx, arg0);
                if let Some(v61) = v60 {
                    let v62 = C::value_type(ctx, v61);
                    match v62 {
                        I32 => {
                            let v349 = C::unpack_value_array_2(ctx, v347);
                            let v352 = constructor_put_in_xreg(ctx, v349.0);
                            let v353 = constructor_put_in_xreg(ctx, v349.1);
                            let v354 =
                                constructor_pulley_xadd32_uoverflow_trap(ctx, v352, v353, v348);
                            let v355 = constructor_output_xreg(ctx, v354);
                            let v356 = Some(v355);
                            // Rule at src/isa/pulley_shared/lower.isle line 447.
                            return v356;
                        }
                        I64 => {
                            let v349 = C::unpack_value_array_2(ctx, v347);
                            let v352 = constructor_put_in_xreg(ctx, v349.0);
                            let v353 = constructor_put_in_xreg(ctx, v349.1);
                            let v357 =
                                constructor_pulley_xadd64_uoverflow_trap(ctx, v352, v353, v348);
                            let v358 = constructor_output_xreg(ctx, v357);
                            let v359 = Some(v358);
                            // Rule at src/isa/pulley_shared/lower.isle line 450.
                            return v359;
                        }
                        _ => {}
                    }
                }
            }
        }
        &InstructionData::IntCompare {
            opcode: ref v201,
            args: ref v202,
            cond: ref v203,
        } => {
            if let &Opcode::Icmp = v201 {
                let v204 = C::unpack_value_array_2(ctx, v202);
                let v207 = C::value_type(ctx, v204.1);
                if v207 == I64 {
                    let v209 = constructor_lower_icmp(ctx, I64, v203, v204.0, v204.1);
                    let v210 = constructor_output_xreg(ctx, v209);
                    let v211 = Some(v210);
                    // Rule at src/isa/pulley_shared/lower.isle line 263.
                    return v211;
                }
                let v212 = C::fits_in_32(ctx, v207);
                if let Some(v213) = v212 {
                    let v215 = constructor_lower_icmp(ctx, I32, v203, v204.0, v204.1);
                    let v216 = constructor_output_xreg(ctx, v215);
                    let v217 = Some(v216);
                    // Rule at src/isa/pulley_shared/lower.isle line 265.
                    return v217;
                }
            }
        }
        &InstructionData::Load {
            opcode: ref v232,
            arg: v233,
            flags: v234,
            offset: v235,
        } => {
            match v232 {
                &Opcode::Load => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        let v241 = C::ty_scalar_float(ctx, v62);
                        if let Some(v242) = v241 {
                            let v236 = &constructor_amode(ctx, v233, v235);
                            let v243 = constructor_pulley_fload(ctx, v236, v242, v234);
                            let v244 = constructor_output_freg(ctx, v243);
                            let v245 = Some(v244);
                            // Rule at src/isa/pulley_shared/lower.isle line 351.
                            return v245;
                        }
                        let v230 = C::ty_int(ctx, v62);
                        if let Some(v231) = v230 {
                            let v236 = &constructor_amode(ctx, v233, v235);
                            let v238 =
                                constructor_pulley_xload(ctx, v236, v231, v234, &ExtKind::None);
                            let v239 = constructor_output_xreg(ctx, v238);
                            let v240 = Some(v239);
                            // Rule at src/isa/pulley_shared/lower.isle line 348.
                            return v240;
                        }
                    }
                }
                &Opcode::Uload8 => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        if v62 == I64 {
                            let v236 = &constructor_amode(ctx, v233, v235);
                            let v261 =
                                constructor_pulley_xload(ctx, v236, I8, v234, &ExtKind::Zero64);
                            let v262 = constructor_output_xreg(ctx, v261);
                            let v263 = Some(v262);
                            // Rule at src/isa/pulley_shared/lower.isle line 363.
                            return v263;
                        }
                        let v230 = C::ty_int(ctx, v62);
                        if let Some(v231) = v230 {
                            let v246 = C::fits_in_32(ctx, v231);
                            if let Some(v247) = v246 {
                                let v236 = &constructor_amode(ctx, v233, v235);
                                let v250 =
                                    constructor_pulley_xload(ctx, v236, I8, v234, &ExtKind::Zero32);
                                let v251 = constructor_output_xreg(ctx, v250);
                                let v252 = Some(v251);
                                // Rule at src/isa/pulley_shared/lower.isle line 354.
                                return v252;
                            }
                        }
                    }
                }
                &Opcode::Sload8 => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        if v62 == I64 {
                            let v236 = &constructor_amode(ctx, v233, v235);
                            let v278 =
                                constructor_pulley_xload(ctx, v236, I8, v234, &ExtKind::Sign64);
                            let v279 = constructor_output_xreg(ctx, v278);
                            let v280 = Some(v279);
                            // Rule at src/isa/pulley_shared/lower.isle line 381.
                            return v280;
                        }
                        let v230 = C::ty_int(ctx, v62);
                        if let Some(v231) = v230 {
                            let v246 = C::fits_in_32(ctx, v231);
                            if let Some(v247) = v246 {
                                let v236 = &constructor_amode(ctx, v233, v235);
                                let v271 =
                                    constructor_pulley_xload(ctx, v236, I8, v234, &ExtKind::Sign32);
                                let v272 = constructor_output_xreg(ctx, v271);
                                let v273 = Some(v272);
                                // Rule at src/isa/pulley_shared/lower.isle line 372.
                                return v273;
                            }
                        }
                    }
                }
                &Opcode::Uload16 => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        if v62 == I64 {
                            let v236 = &constructor_amode(ctx, v233, v235);
                            let v264 =
                                constructor_pulley_xload(ctx, v236, I16, v234, &ExtKind::Zero64);
                            let v265 = constructor_output_xreg(ctx, v264);
                            let v266 = Some(v265);
                            // Rule at src/isa/pulley_shared/lower.isle line 366.
                            return v266;
                        }
                        let v230 = C::ty_int(ctx, v62);
                        if let Some(v231) = v230 {
                            let v246 = C::fits_in_32(ctx, v231);
                            if let Some(v247) = v246 {
                                let v236 = &constructor_amode(ctx, v233, v235);
                                let v254 = constructor_pulley_xload(
                                    ctx,
                                    v236,
                                    I16,
                                    v234,
                                    &ExtKind::Zero32,
                                );
                                let v255 = constructor_output_xreg(ctx, v254);
                                let v256 = Some(v255);
                                // Rule at src/isa/pulley_shared/lower.isle line 357.
                                return v256;
                            }
                        }
                    }
                }
                &Opcode::Sload16 => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        if v62 == I64 {
                            let v236 = &constructor_amode(ctx, v233, v235);
                            let v281 =
                                constructor_pulley_xload(ctx, v236, I16, v234, &ExtKind::Sign64);
                            let v282 = constructor_output_xreg(ctx, v281);
                            let v283 = Some(v282);
                            // Rule at src/isa/pulley_shared/lower.isle line 384.
                            return v283;
                        }
                        let v230 = C::ty_int(ctx, v62);
                        if let Some(v231) = v230 {
                            let v246 = C::fits_in_32(ctx, v231);
                            if let Some(v247) = v246 {
                                let v236 = &constructor_amode(ctx, v233, v235);
                                let v274 = constructor_pulley_xload(
                                    ctx,
                                    v236,
                                    I16,
                                    v234,
                                    &ExtKind::Sign32,
                                );
                                let v275 = constructor_output_xreg(ctx, v274);
                                let v276 = Some(v275);
                                // Rule at src/isa/pulley_shared/lower.isle line 375.
                                return v276;
                            }
                        }
                    }
                }
                &Opcode::Uload32 => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        if v62 == I64 {
                            let v236 = &constructor_amode(ctx, v233, v235);
                            let v267 =
                                constructor_pulley_xload(ctx, v236, I32, v234, &ExtKind::Zero64);
                            let v268 = constructor_output_xreg(ctx, v267);
                            let v269 = Some(v268);
                            // Rule at src/isa/pulley_shared/lower.isle line 369.
                            return v269;
                        }
                        let v230 = C::ty_int(ctx, v62);
                        if let Some(v231) = v230 {
                            let v246 = C::fits_in_32(ctx, v231);
                            if let Some(v247) = v246 {
                                let v236 = &constructor_amode(ctx, v233, v235);
                                let v257 =
                                    constructor_pulley_xload(ctx, v236, I32, v234, &ExtKind::None);
                                let v258 = constructor_output_xreg(ctx, v257);
                                let v259 = Some(v258);
                                // Rule at src/isa/pulley_shared/lower.isle line 360.
                                return v259;
                            }
                        }
                    }
                }
                &Opcode::Sload32 => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        if v62 == I64 {
                            let v236 = &constructor_amode(ctx, v233, v235);
                            let v284 =
                                constructor_pulley_xload(ctx, v236, I32, v234, &ExtKind::Sign64);
                            let v285 = constructor_output_xreg(ctx, v284);
                            let v286 = Some(v285);
                            // Rule at src/isa/pulley_shared/lower.isle line 387.
                            return v286;
                        }
                        let v230 = C::ty_int(ctx, v62);
                        if let Some(v231) = v230 {
                            let v246 = C::fits_in_32(ctx, v231);
                            if let Some(v247) = v246 {
                                let v236 = &constructor_amode(ctx, v233, v235);
                                let v257 =
                                    constructor_pulley_xload(ctx, v236, I32, v234, &ExtKind::None);
                                let v258 = constructor_output_xreg(ctx, v257);
                                let v259 = Some(v258);
                                // Rule at src/isa/pulley_shared/lower.isle line 378.
                                return v259;
                            }
                        }
                    }
                }
                _ => {}
            }
        }
        &InstructionData::LoadNoOffset {
            opcode: ref v384,
            arg: v385,
            flags: v386,
        } => {
            if let &Opcode::Bitcast = v384 {
                let v60 = C::first_result(ctx, arg0);
                if let Some(v61) = v60 {
                    let v62 = C::value_type(ctx, v61);
                    match v62 {
                        I32 => {
                            let v387 = C::value_type(ctx, v385);
                            if v387 == F32 {
                                let v395 = constructor_put_in_freg(ctx, v385);
                                let v396 = constructor_pulley_bitcast_int_from_float_32(ctx, v395);
                                let v397 = constructor_output_xreg(ctx, v396);
                                let v398 = Some(v397);
                                // Rule at src/isa/pulley_shared/lower.isle line 492.
                                return v398;
                            }
                        }
                        I64 => {
                            let v387 = C::value_type(ctx, v385);
                            if v387 == F64 {
                                let v395 = constructor_put_in_freg(ctx, v385);
                                let v399 = constructor_pulley_bitcast_int_from_float_64(ctx, v395);
                                let v400 = constructor_output_xreg(ctx, v399);
                                let v401 = Some(v400);
                                // Rule at src/isa/pulley_shared/lower.isle line 495.
                                return v401;
                            }
                        }
                        F32 => {
                            let v387 = C::value_type(ctx, v385);
                            if v387 == I32 {
                                let v388 = constructor_put_in_xreg(ctx, v385);
                                let v389 = constructor_pulley_bitcast_float_from_int_32(ctx, v388);
                                let v390 = constructor_output_freg(ctx, v389);
                                let v391 = Some(v390);
                                // Rule at src/isa/pulley_shared/lower.isle line 486.
                                return v391;
                            }
                        }
                        F64 => {
                            let v387 = C::value_type(ctx, v385);
                            if v387 == I64 {
                                let v388 = constructor_put_in_xreg(ctx, v385);
                                let v392 = constructor_pulley_bitcast_float_from_int_64(ctx, v388);
                                let v393 = constructor_output_freg(ctx, v392);
                                let v394 = Some(v393);
                                // Rule at src/isa/pulley_shared/lower.isle line 489.
                                return v394;
                            }
                        }
                        _ => {}
                    }
                }
            }
        }
        &InstructionData::MultiAry {
            opcode: ref v31,
            args: v32,
        } => {
            if let &Opcode::Return = v31 {
                let v33 = C::value_list_slice(ctx, v32);
                let v34 = constructor_lower_return(ctx, v33);
                let v35 = Some(v34);
                // Rule at src/isa/pulley_shared/lower.isle line 99.
                return v35;
            }
        }
        &InstructionData::NullAry { opcode: ref v18 } => {
            match v18 {
                &Opcode::GetFramePointer => {
                    let v23 = C::fp_reg(ctx);
                    let v24 = constructor_pulley_get_special(ctx, v23);
                    let v25 = constructor_output_xreg(ctx, v24);
                    let v26 = Some(v25);
                    // Rule at src/isa/pulley_shared/lower.isle line 88.
                    return v26;
                }
                &Opcode::GetStackPointer => {
                    let v19 = C::sp_reg(ctx);
                    let v20 = constructor_pulley_get_special(ctx, v19);
                    let v21 = constructor_output_xreg(ctx, v20);
                    let v22 = Some(v21);
                    // Rule at src/isa/pulley_shared/lower.isle line 83.
                    return v22;
                }
                &Opcode::GetReturnAddress => {
                    let v27 = C::lr_reg(ctx);
                    let v28 = constructor_pulley_get_special(ctx, v27);
                    let v29 = constructor_output_xreg(ctx, v28);
                    let v30 = Some(v29);
                    // Rule at src/isa/pulley_shared/lower.isle line 93.
                    return v30;
                }
                _ => {}
            }
        }
        &InstructionData::StackLoad {
            opcode: ref v317,
            stack_slot: v318,
            offset: v319,
        } => {
            if let &Opcode::StackAddr = v317 {
                let v320 = constructor_lower_stack_addr(ctx, v318, v319);
                let v321 = constructor_output_xreg(ctx, v320);
                let v322 = Some(v321);
                // Rule at src/isa/pulley_shared/lower.isle line 409.
                return v322;
            }
        }
        &InstructionData::Store {
            opcode: ref v287,
            args: ref v288,
            flags: v289,
            offset: v290,
        } => {
            match v287 {
                &Opcode::Store => {
                    let v291 = C::unpack_value_array_2(ctx, v288);
                    let v294 = C::value_type(ctx, v291.0);
                    let v302 = C::ty_scalar_float(ctx, v294);
                    if let Some(v303) = v302 {
                        let v297 = &constructor_amode(ctx, v291.1, v290);
                        let v304 = constructor_put_in_freg(ctx, v291.0);
                        let v305 = &constructor_pulley_fstore(ctx, v297, v304, v303, v289);
                        let v306 = constructor_side_effect(ctx, v305);
                        let v307 = Some(v306);
                        // Rule at src/isa/pulley_shared/lower.isle line 395.
                        return v307;
                    }
                    let v295 = C::ty_int(ctx, v294);
                    if let Some(v296) = v295 {
                        let v297 = &constructor_amode(ctx, v291.1, v290);
                        let v298 = constructor_put_in_xreg(ctx, v291.0);
                        let v299 = &constructor_pulley_xstore(ctx, v297, v298, v296, v289);
                        let v300 = constructor_side_effect(ctx, v299);
                        let v301 = Some(v300);
                        // Rule at src/isa/pulley_shared/lower.isle line 392.
                        return v301;
                    }
                }
                &Opcode::Istore8 => {
                    let v291 = C::unpack_value_array_2(ctx, v288);
                    let v297 = &constructor_amode(ctx, v291.1, v290);
                    let v298 = constructor_put_in_xreg(ctx, v291.0);
                    let v308 = &constructor_pulley_xstore(ctx, v297, v298, I8, v289);
                    let v309 = constructor_side_effect(ctx, v308);
                    let v310 = Some(v309);
                    // Rule at src/isa/pulley_shared/lower.isle line 398.
                    return v310;
                }
                &Opcode::Istore16 => {
                    let v291 = C::unpack_value_array_2(ctx, v288);
                    let v297 = &constructor_amode(ctx, v291.1, v290);
                    let v298 = constructor_put_in_xreg(ctx, v291.0);
                    let v311 = &constructor_pulley_xstore(ctx, v297, v298, I16, v289);
                    let v312 = constructor_side_effect(ctx, v311);
                    let v313 = Some(v312);
                    // Rule at src/isa/pulley_shared/lower.isle line 401.
                    return v313;
                }
                &Opcode::Istore32 => {
                    let v291 = C::unpack_value_array_2(ctx, v288);
                    let v297 = &constructor_amode(ctx, v291.1, v290);
                    let v298 = constructor_put_in_xreg(ctx, v291.0);
                    let v314 = &constructor_pulley_xstore(ctx, v297, v298, I32, v289);
                    let v315 = constructor_side_effect(ctx, v314);
                    let v316 = Some(v315);
                    // Rule at src/isa/pulley_shared/lower.isle line 404.
                    return v316;
                }
                _ => {}
            }
        }
        &InstructionData::Ternary {
            opcode: ref v360,
            args: ref v361,
        } => {
            if let &Opcode::Select = v360 {
                let v60 = C::first_result(ctx, arg0);
                if let Some(v61) = v60 {
                    let v62 = C::value_type(ctx, v61);
                    match v62 {
                        I64 => {
                            let v362 = C::unpack_value_array_3(ctx, v361);
                            let v366 = &constructor_lower_cond(ctx, v362.0);
                            let v367 = constructor_emit_cond(ctx, v366);
                            let v368 = constructor_put_in_xreg(ctx, v362.1);
                            let v369 = constructor_put_in_xreg(ctx, v362.2);
                            let v373 = constructor_pulley_xselect64(ctx, v367, v368, v369);
                            let v374 = constructor_output_xreg(ctx, v373);
                            let v375 = Some(v374);
                            // Rule at src/isa/pulley_shared/lower.isle line 458.
                            return v375;
                        }
                        F32 => {
                            let v362 = C::unpack_value_array_3(ctx, v361);
                            let v366 = &constructor_lower_cond(ctx, v362.0);
                            let v367 = constructor_emit_cond(ctx, v366);
                            let v376 = constructor_put_in_freg(ctx, v362.1);
                            let v377 = constructor_put_in_freg(ctx, v362.2);
                            let v378 = constructor_pulley_fselect32(ctx, v367, v376, v377);
                            let v379 = constructor_output_freg(ctx, v378);
                            let v380 = Some(v379);
                            // Rule at src/isa/pulley_shared/lower.isle line 461.
                            return v380;
                        }
                        F64 => {
                            let v362 = C::unpack_value_array_3(ctx, v361);
                            let v366 = &constructor_lower_cond(ctx, v362.0);
                            let v367 = constructor_emit_cond(ctx, v366);
                            let v376 = constructor_put_in_freg(ctx, v362.1);
                            let v377 = constructor_put_in_freg(ctx, v362.2);
                            let v381 = constructor_pulley_fselect64(ctx, v367, v376, v377);
                            let v382 = constructor_output_freg(ctx, v381);
                            let v383 = Some(v382);
                            // Rule at src/isa/pulley_shared/lower.isle line 464.
                            return v383;
                        }
                        _ => {}
                    }
                    let v230 = C::ty_int(ctx, v62);
                    if let Some(v231) = v230 {
                        let v246 = C::fits_in_32(ctx, v231);
                        if let Some(v247) = v246 {
                            let v362 = C::unpack_value_array_3(ctx, v361);
                            let v366 = &constructor_lower_cond(ctx, v362.0);
                            let v367 = constructor_emit_cond(ctx, v366);
                            let v368 = constructor_put_in_xreg(ctx, v362.1);
                            let v369 = constructor_put_in_xreg(ctx, v362.2);
                            let v370 = constructor_pulley_xselect32(ctx, v367, v368, v369);
                            let v371 = constructor_output_xreg(ctx, v370);
                            let v372 = Some(v371);
                            // Rule at src/isa/pulley_shared/lower.isle line 455.
                            return v372;
                        }
                    }
                }
            }
        }
        &InstructionData::Trap {
            opcode: ref v2,
            code: ref v3,
        } => {
            if let &Opcode::Trap = v2 {
                let v4 = &constructor_pulley_trap(ctx, v3);
                let v5 = constructor_side_effect(ctx, v4);
                let v6 = Some(v5);
                // Rule at src/isa/pulley_shared/lower.isle line 70.
                return v6;
            }
        }
        &InstructionData::Unary {
            opcode: ref v168,
            arg: v169,
        } => {
            match v168 {
                &Opcode::Clz => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I32 => {
                                let v170 = constructor_put_in_xreg(ctx, v169);
                                let v177 = constructor_pulley_xclz32(ctx, v170);
                                let v178 = constructor_output_xreg(ctx, v177);
                                let v179 = Some(v178);
                                // Rule at src/isa/pulley_shared/lower.isle line 243.
                                return v179;
                            }
                            I64 => {
                                let v170 = constructor_put_in_xreg(ctx, v169);
                                let v180 = constructor_pulley_xclz64(ctx, v170);
                                let v181 = constructor_output_xreg(ctx, v180);
                                let v182 = Some(v181);
                                // Rule at src/isa/pulley_shared/lower.isle line 244.
                                return v182;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Ctz => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I32 => {
                                let v170 = constructor_put_in_xreg(ctx, v169);
                                let v171 = constructor_pulley_xctz32(ctx, v170);
                                let v172 = constructor_output_xreg(ctx, v171);
                                let v173 = Some(v172);
                                // Rule at src/isa/pulley_shared/lower.isle line 238.
                                return v173;
                            }
                            I64 => {
                                let v170 = constructor_put_in_xreg(ctx, v169);
                                let v174 = constructor_pulley_xctz64(ctx, v170);
                                let v175 = constructor_output_xreg(ctx, v174);
                                let v176 = Some(v175);
                                // Rule at src/isa/pulley_shared/lower.isle line 239.
                                return v176;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Popcnt => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I32 => {
                                let v170 = constructor_put_in_xreg(ctx, v169);
                                let v183 = constructor_pulley_xpopcnt32(ctx, v170);
                                let v184 = constructor_output_xreg(ctx, v183);
                                let v185 = Some(v184);
                                // Rule at src/isa/pulley_shared/lower.isle line 248.
                                return v185;
                            }
                            I64 => {
                                let v170 = constructor_put_in_xreg(ctx, v169);
                                let v186 = constructor_pulley_xpopcnt64(ctx, v170);
                                let v187 = constructor_output_xreg(ctx, v186);
                                let v188 = Some(v187);
                                // Rule at src/isa/pulley_shared/lower.isle line 249.
                                return v188;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Ireduce => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        let v323 = C::fits_in_64(ctx, v62);
                        if let Some(v324) = v323 {
                            let v344 = constructor_output_value(ctx, v169);
                            let v345 = Some(v344);
                            // Rule at src/isa/pulley_shared/lower.isle line 442.
                            return v345;
                        }
                    }
                }
                &Opcode::Uextend => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        let v323 = C::fits_in_64(ctx, v62);
                        if let Some(v324) = v323 {
                            let v325 = C::value_type(ctx, v169);
                            match v325 {
                                I8 => {
                                    let v170 = constructor_put_in_xreg(ctx, v169);
                                    let v332 = constructor_pulley_zext8(ctx, v170);
                                    let v333 = constructor_output_xreg(ctx, v332);
                                    let v334 = Some(v333);
                                    // Rule at src/isa/pulley_shared/lower.isle line 426.
                                    return v334;
                                }
                                I16 => {
                                    let v170 = constructor_put_in_xreg(ctx, v169);
                                    let v329 = constructor_pulley_zext16(ctx, v170);
                                    let v330 = constructor_output_xreg(ctx, v329);
                                    let v331 = Some(v330);
                                    // Rule at src/isa/pulley_shared/lower.isle line 423.
                                    return v331;
                                }
                                I32 => {
                                    let v170 = constructor_put_in_xreg(ctx, v169);
                                    let v326 = constructor_pulley_zext32(ctx, v170);
                                    let v327 = constructor_output_xreg(ctx, v326);
                                    let v328 = Some(v327);
                                    // Rule at src/isa/pulley_shared/lower.isle line 420.
                                    return v328;
                                }
                                _ => {}
                            }
                        }
                    }
                }
                &Opcode::Sextend => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        let v323 = C::fits_in_64(ctx, v62);
                        if let Some(v324) = v323 {
                            let v325 = C::value_type(ctx, v169);
                            match v325 {
                                I8 => {
                                    let v170 = constructor_put_in_xreg(ctx, v169);
                                    let v335 = constructor_pulley_sext8(ctx, v170);
                                    let v336 = constructor_output_xreg(ctx, v335);
                                    let v337 = Some(v336);
                                    // Rule at src/isa/pulley_shared/lower.isle line 431.
                                    return v337;
                                }
                                I16 => {
                                    let v170 = constructor_put_in_xreg(ctx, v169);
                                    let v338 = constructor_pulley_sext16(ctx, v170);
                                    let v339 = constructor_output_xreg(ctx, v338);
                                    let v340 = Some(v339);
                                    // Rule at src/isa/pulley_shared/lower.isle line 434.
                                    return v340;
                                }
                                I32 => {
                                    let v170 = constructor_put_in_xreg(ctx, v169);
                                    let v341 = constructor_pulley_sext32(ctx, v170);
                                    let v342 = constructor_output_xreg(ctx, v341);
                                    let v343 = Some(v342);
                                    // Rule at src/isa/pulley_shared/lower.isle line 437.
                                    return v343;
                                }
                                _ => {}
                            }
                        }
                    }
                }
                &Opcode::Fpromote => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        if v62 == F64 {
                            let v325 = C::value_type(ctx, v169);
                            if v325 == F32 {
                                let v402 = constructor_put_in_freg(ctx, v169);
                                let v478 = constructor_pulley_f64_from_f32(ctx, v402);
                                let v479 = constructor_output_freg(ctx, v478);
                                let v480 = Some(v479);
                                // Rule at src/isa/pulley_shared/lower.isle line 583.
                                return v480;
                            }
                        }
                    }
                }
                &Opcode::Fdemote => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        if v62 == F32 {
                            let v325 = C::value_type(ctx, v169);
                            if v325 == F64 {
                                let v402 = constructor_put_in_freg(ctx, v169);
                                let v475 = constructor_pulley_f32_from_f64(ctx, v402);
                                let v476 = constructor_output_freg(ctx, v475);
                                let v477 = Some(v476);
                                // Rule at src/isa/pulley_shared/lower.isle line 578.
                                return v477;
                            }
                        }
                    }
                }
                &Opcode::FcvtToUint => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I32 => {
                                let v325 = C::value_type(ctx, v169);
                                match v325 {
                                    F32 => {
                                        let v402 = constructor_put_in_freg(ctx, v169);
                                        let v403 = constructor_pulley_x32_from_f32_u(ctx, v402);
                                        let v404 = constructor_output_xreg(ctx, v403);
                                        let v405 = Some(v404);
                                        // Rule at src/isa/pulley_shared/lower.isle line 500.
                                        return v405;
                                    }
                                    F64 => {
                                        let v402 = constructor_put_in_freg(ctx, v169);
                                        let v406 = constructor_pulley_x32_from_f64_u(ctx, v402);
                                        let v407 = constructor_output_xreg(ctx, v406);
                                        let v408 = Some(v407);
                                        // Rule at src/isa/pulley_shared/lower.isle line 503.
                                        return v408;
                                    }
                                    _ => {}
                                }
                            }
                            I64 => {
                                let v325 = C::value_type(ctx, v169);
                                match v325 {
                                    F32 => {
                                        let v402 = constructor_put_in_freg(ctx, v169);
                                        let v409 = constructor_pulley_x64_from_f32_u(ctx, v402);
                                        let v410 = constructor_output_xreg(ctx, v409);
                                        let v411 = Some(v410);
                                        // Rule at src/isa/pulley_shared/lower.isle line 506.
                                        return v411;
                                    }
                                    F64 => {
                                        let v402 = constructor_put_in_freg(ctx, v169);
                                        let v412 = constructor_pulley_x64_from_f64_u(ctx, v402);
                                        let v413 = constructor_output_xreg(ctx, v412);
                                        let v414 = Some(v413);
                                        // Rule at src/isa/pulley_shared/lower.isle line 509.
                                        return v414;
                                    }
                                    _ => {}
                                }
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::FcvtToSint => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I32 => {
                                let v325 = C::value_type(ctx, v169);
                                match v325 {
                                    F32 => {
                                        let v402 = constructor_put_in_freg(ctx, v169);
                                        let v415 = constructor_pulley_x32_from_f32_s(ctx, v402);
                                        let v416 = constructor_output_xreg(ctx, v415);
                                        let v417 = Some(v416);
                                        // Rule at src/isa/pulley_shared/lower.isle line 512.
                                        return v417;
                                    }
                                    F64 => {
                                        let v402 = constructor_put_in_freg(ctx, v169);
                                        let v418 = constructor_pulley_x32_from_f64_s(ctx, v402);
                                        let v419 = constructor_output_xreg(ctx, v418);
                                        let v420 = Some(v419);
                                        // Rule at src/isa/pulley_shared/lower.isle line 515.
                                        return v420;
                                    }
                                    _ => {}
                                }
                            }
                            I64 => {
                                let v325 = C::value_type(ctx, v169);
                                match v325 {
                                    F32 => {
                                        let v402 = constructor_put_in_freg(ctx, v169);
                                        let v421 = constructor_pulley_x64_from_f32_s(ctx, v402);
                                        let v422 = constructor_output_xreg(ctx, v421);
                                        let v423 = Some(v422);
                                        // Rule at src/isa/pulley_shared/lower.isle line 518.
                                        return v423;
                                    }
                                    F64 => {
                                        let v402 = constructor_put_in_freg(ctx, v169);
                                        let v424 = constructor_pulley_x64_from_f64_s(ctx, v402);
                                        let v425 = constructor_output_xreg(ctx, v424);
                                        let v426 = Some(v425);
                                        // Rule at src/isa/pulley_shared/lower.isle line 521.
                                        return v426;
                                    }
                                    _ => {}
                                }
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::FcvtToUintSat => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I32 => {
                                let v325 = C::value_type(ctx, v169);
                                match v325 {
                                    F32 => {
                                        let v402 = constructor_put_in_freg(ctx, v169);
                                        let v451 = constructor_pulley_x32_from_f32_u_sat(ctx, v402);
                                        let v452 = constructor_output_xreg(ctx, v451);
                                        let v453 = Some(v452);
                                        // Rule at src/isa/pulley_shared/lower.isle line 552.
                                        return v453;
                                    }
                                    F64 => {
                                        let v402 = constructor_put_in_freg(ctx, v169);
                                        let v454 = constructor_pulley_x32_from_f64_u_sat(ctx, v402);
                                        let v455 = constructor_output_xreg(ctx, v454);
                                        let v456 = Some(v455);
                                        // Rule at src/isa/pulley_shared/lower.isle line 555.
                                        return v456;
                                    }
                                    _ => {}
                                }
                            }
                            I64 => {
                                let v325 = C::value_type(ctx, v169);
                                match v325 {
                                    F32 => {
                                        let v402 = constructor_put_in_freg(ctx, v169);
                                        let v457 = constructor_pulley_x64_from_f32_u_sat(ctx, v402);
                                        let v458 = constructor_output_xreg(ctx, v457);
                                        let v459 = Some(v458);
                                        // Rule at src/isa/pulley_shared/lower.isle line 558.
                                        return v459;
                                    }
                                    F64 => {
                                        let v402 = constructor_put_in_freg(ctx, v169);
                                        let v460 = constructor_pulley_x64_from_f64_u_sat(ctx, v402);
                                        let v461 = constructor_output_xreg(ctx, v460);
                                        let v462 = Some(v461);
                                        // Rule at src/isa/pulley_shared/lower.isle line 561.
                                        return v462;
                                    }
                                    _ => {}
                                }
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::FcvtToSintSat => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            I32 => {
                                let v325 = C::value_type(ctx, v169);
                                match v325 {
                                    F32 => {
                                        let v402 = constructor_put_in_freg(ctx, v169);
                                        let v463 = constructor_pulley_x32_from_f32_s_sat(ctx, v402);
                                        let v464 = constructor_output_xreg(ctx, v463);
                                        let v465 = Some(v464);
                                        // Rule at src/isa/pulley_shared/lower.isle line 564.
                                        return v465;
                                    }
                                    F64 => {
                                        let v402 = constructor_put_in_freg(ctx, v169);
                                        let v466 = constructor_pulley_x32_from_f64_s_sat(ctx, v402);
                                        let v467 = constructor_output_xreg(ctx, v466);
                                        let v468 = Some(v467);
                                        // Rule at src/isa/pulley_shared/lower.isle line 567.
                                        return v468;
                                    }
                                    _ => {}
                                }
                            }
                            I64 => {
                                let v325 = C::value_type(ctx, v169);
                                match v325 {
                                    F32 => {
                                        let v402 = constructor_put_in_freg(ctx, v169);
                                        let v469 = constructor_pulley_x64_from_f32_s_sat(ctx, v402);
                                        let v470 = constructor_output_xreg(ctx, v469);
                                        let v471 = Some(v470);
                                        // Rule at src/isa/pulley_shared/lower.isle line 570.
                                        return v471;
                                    }
                                    F64 => {
                                        let v402 = constructor_put_in_freg(ctx, v169);
                                        let v472 = constructor_pulley_x64_from_f64_s_sat(ctx, v402);
                                        let v473 = constructor_output_xreg(ctx, v472);
                                        let v474 = Some(v473);
                                        // Rule at src/isa/pulley_shared/lower.isle line 573.
                                        return v474;
                                    }
                                    _ => {}
                                }
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::FcvtFromUint => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            F32 => {
                                let v325 = C::value_type(ctx, v169);
                                match v325 {
                                    I32 => {
                                        let v170 = constructor_put_in_xreg(ctx, v169);
                                        let v427 = constructor_pulley_f32_from_x32_u(ctx, v170);
                                        let v428 = constructor_output_freg(ctx, v427);
                                        let v429 = Some(v428);
                                        // Rule at src/isa/pulley_shared/lower.isle line 526.
                                        return v429;
                                    }
                                    I64 => {
                                        let v170 = constructor_put_in_xreg(ctx, v169);
                                        let v430 = constructor_pulley_f32_from_x64_u(ctx, v170);
                                        let v431 = constructor_output_freg(ctx, v430);
                                        let v432 = Some(v431);
                                        // Rule at src/isa/pulley_shared/lower.isle line 529.
                                        return v432;
                                    }
                                    _ => {}
                                }
                            }
                            F64 => {
                                let v325 = C::value_type(ctx, v169);
                                match v325 {
                                    I32 => {
                                        let v170 = constructor_put_in_xreg(ctx, v169);
                                        let v433 = constructor_pulley_f64_from_x32_u(ctx, v170);
                                        let v434 = constructor_output_freg(ctx, v433);
                                        let v435 = Some(v434);
                                        // Rule at src/isa/pulley_shared/lower.isle line 532.
                                        return v435;
                                    }
                                    I64 => {
                                        let v170 = constructor_put_in_xreg(ctx, v169);
                                        let v436 = constructor_pulley_f64_from_x64_u(ctx, v170);
                                        let v437 = constructor_output_freg(ctx, v436);
                                        let v438 = Some(v437);
                                        // Rule at src/isa/pulley_shared/lower.isle line 535.
                                        return v438;
                                    }
                                    _ => {}
                                }
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::FcvtFromSint => {
                    let v60 = C::first_result(ctx, arg0);
                    if let Some(v61) = v60 {
                        let v62 = C::value_type(ctx, v61);
                        match v62 {
                            F32 => {
                                let v325 = C::value_type(ctx, v169);
                                match v325 {
                                    I32 => {
                                        let v170 = constructor_put_in_xreg(ctx, v169);
                                        let v439 = constructor_pulley_f32_from_x32_s(ctx, v170);
                                        let v440 = constructor_output_freg(ctx, v439);
                                        let v441 = Some(v440);
                                        // Rule at src/isa/pulley_shared/lower.isle line 538.
                                        return v441;
                                    }
                                    I64 => {
                                        let v170 = constructor_put_in_xreg(ctx, v169);
                                        let v442 = constructor_pulley_f32_from_x64_s(ctx, v170);
                                        let v443 = constructor_output_freg(ctx, v442);
                                        let v444 = Some(v443);
                                        // Rule at src/isa/pulley_shared/lower.isle line 541.
                                        return v444;
                                    }
                                    _ => {}
                                }
                            }
                            F64 => {
                                let v325 = C::value_type(ctx, v169);
                                match v325 {
                                    I32 => {
                                        let v170 = constructor_put_in_xreg(ctx, v169);
                                        let v445 = constructor_pulley_f64_from_x32_s(ctx, v170);
                                        let v446 = constructor_output_freg(ctx, v445);
                                        let v447 = Some(v446);
                                        // Rule at src/isa/pulley_shared/lower.isle line 544.
                                        return v447;
                                    }
                                    I64 => {
                                        let v170 = constructor_put_in_xreg(ctx, v169);
                                        let v448 = constructor_pulley_f64_from_x64_s(ctx, v170);
                                        let v449 = constructor_output_freg(ctx, v448);
                                        let v450 = Some(v449);
                                        // Rule at src/isa/pulley_shared/lower.isle line 547.
                                        return v450;
                                    }
                                    _ => {}
                                }
                            }
                            _ => {}
                        }
                    }
                }
                _ => {}
            }
        }
        &InstructionData::UnaryIeee32 {
            opcode: ref v69,
            imm: v70,
        } => {
            if let &Opcode::F32const = v69 {
                let v71 = C::u32_from_ieee32(ctx, v70);
                let v72 = constructor_pulley_fconst32(ctx, v71);
                let v73 = constructor_output_freg(ctx, v72);
                let v74 = Some(v73);
                // Rule at src/isa/pulley_shared/lower.isle line 125.
                return v74;
            }
        }
        &InstructionData::UnaryIeee64 {
            opcode: ref v75,
            imm: v76,
        } => {
            if let &Opcode::F64const = v75 {
                let v77 = C::u64_from_ieee64(ctx, v76);
                let v78 = constructor_pulley_fconst64(ctx, v77);
                let v79 = constructor_output_freg(ctx, v78);
                let v80 = Some(v79);
                // Rule at src/isa/pulley_shared/lower.isle line 130.
                return v80;
            }
        }
        &InstructionData::UnaryImm {
            opcode: ref v63,
            imm: v64,
        } => {
            if let &Opcode::Iconst = v63 {
                let v60 = C::first_result(ctx, arg0);
                if let Some(v61) = v60 {
                    let v62 = C::value_type(ctx, v61);
                    let v65 = C::u64_from_imm64(ctx, v64);
                    let v66 = constructor_imm(ctx, v62, v65);
                    let v67 = constructor_output_reg(ctx, v66);
                    let v68 = Some(v67);
                    // Rule at src/isa/pulley_shared/lower.isle line 120.
                    return v68;
                }
            }
        }
        _ => {}
    }
    None
}

// Generated as internal constructor for term lower_cond.
pub fn constructor_lower_cond<C: Context>(ctx: &mut C, arg0: Value) -> Cond {
    let v11 = C::def_inst(ctx, arg0);
    if let Some(v12) = v11 {
        let v13 = &C::inst_data(ctx, v12);
        match v13 {
            &InstructionData::IntCompare {
                opcode: ref v17,
                args: ref v18,
                cond: ref v19,
            } => {
                if let &Opcode::Icmp = v17 {
                    let v20 = C::unpack_value_array_2(ctx, v18);
                    let v23 = C::value_type(ctx, v20.1);
                    match v23 {
                        I32 => {
                            let v24 = &constructor_lower_cond_icmp32(ctx, v19, v20.0, v20.1);
                            // Rule at src/isa/pulley_shared/lower.isle line 23.
                            return v24.clone();
                        }
                        I64 => {
                            let v25 = &constructor_lower_cond_icmp64(ctx, v19, v20.0, v20.1);
                            // Rule at src/isa/pulley_shared/lower.isle line 24.
                            return v25.clone();
                        }
                        _ => {}
                    }
                }
            }
            &InstructionData::Unary {
                opcode: ref v14,
                arg: v15,
            } => {
                if let &Opcode::Uextend = v14 {
                    let v16 = &constructor_lower_cond(ctx, v15);
                    // Rule at src/isa/pulley_shared/lower.isle line 21.
                    return v16.clone();
                }
            }
            _ => {}
        }
    }
    let v1 = C::value_type(ctx, arg0);
    match v1 {
        I8 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v9 = constructor_pulley_zext8(ctx, v2);
            let v10 = Cond::If32 { reg: v9 };
            // Rule at src/isa/pulley_shared/lower.isle line 18.
            return v10;
        }
        I16 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v7 = constructor_pulley_zext16(ctx, v2);
            let v8 = Cond::If32 { reg: v7 };
            // Rule at src/isa/pulley_shared/lower.isle line 17.
            return v8;
        }
        I32 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v6 = Cond::If32 { reg: v2 };
            // Rule at src/isa/pulley_shared/lower.isle line 16.
            return v6;
        }
        I64 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v4 = constructor_pulley_xconst8(ctx, 0_i8);
            let v5 = Cond::IfXneq64 { src1: v2, src2: v4 };
            // Rule at src/isa/pulley_shared/lower.isle line 14.
            return v5;
        }
        _ => {}
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "lower_cond", "src/isa/pulley_shared/lower.isle line 13"
    )
}

// Generated as internal constructor for term lower_cond_icmp32.
pub fn constructor_lower_cond_icmp32<C: Context>(
    ctx: &mut C,
    arg0: &IntCC,
    arg1: Value,
    arg2: Value,
) -> Cond {
    match arg0 {
        &IntCC::Equal => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v5 = Cond::IfXeq32 { src1: v3, src2: v4 };
            // Rule at src/isa/pulley_shared/lower.isle line 27.
            return v5;
        }
        &IntCC::NotEqual => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v6 = Cond::IfXneq32 { src1: v3, src2: v4 };
            // Rule at src/isa/pulley_shared/lower.isle line 28.
            return v6;
        }
        &IntCC::SignedGreaterThan => {
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v13 = Cond::IfXslt32 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 34.
            return v13;
        }
        &IntCC::SignedGreaterThanOrEqual => {
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v14 = Cond::IfXslteq32 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 35.
            return v14;
        }
        &IntCC::SignedLessThan => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v7 = Cond::IfXslt32 { src1: v3, src2: v4 };
            // Rule at src/isa/pulley_shared/lower.isle line 29.
            return v7;
        }
        &IntCC::SignedLessThanOrEqual => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v8 = Cond::IfXslteq32 { src1: v3, src2: v4 };
            // Rule at src/isa/pulley_shared/lower.isle line 30.
            return v8;
        }
        &IntCC::UnsignedGreaterThan => {
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v15 = Cond::IfXult32 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 36.
            return v15;
        }
        &IntCC::UnsignedGreaterThanOrEqual => {
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v16 = Cond::IfXulteq32 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 37.
            return v16;
        }
        &IntCC::UnsignedLessThan => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v9 = Cond::IfXult32 { src1: v3, src2: v4 };
            // Rule at src/isa/pulley_shared/lower.isle line 31.
            return v9;
        }
        &IntCC::UnsignedLessThanOrEqual => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v10 = Cond::IfXulteq32 { src1: v3, src2: v4 };
            // Rule at src/isa/pulley_shared/lower.isle line 32.
            return v10;
        }
        _ => {}
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "lower_cond_icmp32", "src/isa/pulley_shared/lower.isle line 26"
    )
}

// Generated as internal constructor for term lower_cond_icmp64.
pub fn constructor_lower_cond_icmp64<C: Context>(
    ctx: &mut C,
    arg0: &IntCC,
    arg1: Value,
    arg2: Value,
) -> Cond {
    match arg0 {
        &IntCC::Equal => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v5 = Cond::IfXeq64 { src1: v3, src2: v4 };
            // Rule at src/isa/pulley_shared/lower.isle line 40.
            return v5;
        }
        &IntCC::NotEqual => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v6 = Cond::IfXneq64 { src1: v3, src2: v4 };
            // Rule at src/isa/pulley_shared/lower.isle line 41.
            return v6;
        }
        &IntCC::SignedGreaterThan => {
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v13 = Cond::IfXslt64 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 47.
            return v13;
        }
        &IntCC::SignedGreaterThanOrEqual => {
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v14 = Cond::IfXslteq64 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 48.
            return v14;
        }
        &IntCC::SignedLessThan => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v7 = Cond::IfXslt64 { src1: v3, src2: v4 };
            // Rule at src/isa/pulley_shared/lower.isle line 42.
            return v7;
        }
        &IntCC::SignedLessThanOrEqual => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v8 = Cond::IfXslteq64 { src1: v3, src2: v4 };
            // Rule at src/isa/pulley_shared/lower.isle line 43.
            return v8;
        }
        &IntCC::UnsignedGreaterThan => {
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v15 = Cond::IfXult64 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 49.
            return v15;
        }
        &IntCC::UnsignedGreaterThanOrEqual => {
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v16 = Cond::IfXulteq64 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 50.
            return v16;
        }
        &IntCC::UnsignedLessThan => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v9 = Cond::IfXult64 { src1: v3, src2: v4 };
            // Rule at src/isa/pulley_shared/lower.isle line 44.
            return v9;
        }
        &IntCC::UnsignedLessThanOrEqual => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v10 = Cond::IfXulteq64 { src1: v3, src2: v4 };
            // Rule at src/isa/pulley_shared/lower.isle line 45.
            return v10;
        }
        _ => {}
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "lower_cond_icmp64", "src/isa/pulley_shared/lower.isle line 39"
    )
}

// Generated as internal constructor for term lower_branch.
pub fn constructor_lower_branch<C: Context>(
    ctx: &mut C,
    arg0: Inst,
    arg1: &MachLabelSlice,
) -> Option<Unit> {
    let v1 = &C::inst_data(ctx, arg0);
    match v1 {
        &InstructionData::BranchTable {
            opcode: ref v24,
            arg: v25,
            table: v26,
        } => {
            if let &Opcode::BrTable = v24 {
                let v27 = C::jump_table_targets(ctx, arg1);
                if let Some(v28) = v27 {
                    let v31 = constructor_put_in_xreg(ctx, v25);
                    let v32 = constructor_gen_br_table(ctx, v31, v28.0, &v28.1);
                    let v33 = Some(v32);
                    // Rule at src/isa/pulley_shared/lower.isle line 65.
                    return v33;
                }
            }
        }
        &InstructionData::Brif {
            opcode: ref v10,
            arg: v11,
            blocks: ref v12,
        } => {
            if let &Opcode::Brif = v10 {
                let v16 = C::two_targets(ctx, arg1);
                if let Some(v17) = v16 {
                    let v20 = &constructor_lower_cond(ctx, v11);
                    let v21 = &constructor_pulley_br_if(ctx, v20, v17.0, v17.1);
                    let v22 = constructor_emit_side_effect(ctx, v21);
                    let v23 = Some(v22);
                    // Rule at src/isa/pulley_shared/lower.isle line 61.
                    return v23;
                }
            }
        }
        &InstructionData::Jump {
            opcode: ref v2,
            destination: v3,
        } => {
            if let &Opcode::Jump = v2 {
                let v5 = C::single_target(ctx, arg1);
                if let Some(v6) = v5 {
                    let v7 = &constructor_pulley_jump(ctx, v6);
                    let v8 = constructor_emit_side_effect(ctx, v7);
                    let v9 = Some(v8);
                    // Rule at src/isa/pulley_shared/lower.isle line 57.
                    return v9;
                }
            }
        }
        _ => {}
    }
    None
}

// Generated as internal constructor for term lower_icmp.
pub fn constructor_lower_icmp<C: Context>(
    ctx: &mut C,
    arg0: Type,
    arg1: &IntCC,
    arg2: Value,
    arg3: Value,
) -> XReg {
    match arg1 {
        &IntCC::Equal => {
            match arg0 {
                I32 => {
                    let v4 = constructor_put_in_xreg(ctx, arg2);
                    let v5 = constructor_put_in_xreg(ctx, arg3);
                    let v12 = constructor_pulley_xeq32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 288.
                    return v12;
                }
                I64 => {
                    let v4 = constructor_put_in_xreg(ctx, arg2);
                    let v5 = constructor_put_in_xreg(ctx, arg3);
                    let v6 = constructor_pulley_xeq64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 270.
                    return v6;
                }
                _ => {}
            }
        }
        &IntCC::NotEqual => {
            match arg0 {
                I32 => {
                    let v4 = constructor_put_in_xreg(ctx, arg2);
                    let v5 = constructor_put_in_xreg(ctx, arg3);
                    let v13 = constructor_pulley_xneq32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 291.
                    return v13;
                }
                I64 => {
                    let v4 = constructor_put_in_xreg(ctx, arg2);
                    let v5 = constructor_put_in_xreg(ctx, arg3);
                    let v7 = constructor_pulley_xneq64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 273.
                    return v7;
                }
                _ => {}
            }
        }
        &IntCC::SignedGreaterThan => {
            let v19 = constructor_lower_icmp(ctx, arg0, &IntCC::SignedLessThan, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 308.
            return v19;
        }
        &IntCC::SignedGreaterThanOrEqual => {
            let v21 = constructor_lower_icmp(ctx, arg0, &IntCC::SignedLessThanOrEqual, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 310.
            return v21;
        }
        &IntCC::SignedLessThan => {
            match arg0 {
                I32 => {
                    let v4 = constructor_put_in_xreg(ctx, arg2);
                    let v5 = constructor_put_in_xreg(ctx, arg3);
                    let v14 = constructor_pulley_xslt32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 294.
                    return v14;
                }
                I64 => {
                    let v4 = constructor_put_in_xreg(ctx, arg2);
                    let v5 = constructor_put_in_xreg(ctx, arg3);
                    let v8 = constructor_pulley_xslt64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 276.
                    return v8;
                }
                _ => {}
            }
        }
        &IntCC::SignedLessThanOrEqual => {
            match arg0 {
                I32 => {
                    let v4 = constructor_put_in_xreg(ctx, arg2);
                    let v5 = constructor_put_in_xreg(ctx, arg3);
                    let v15 = constructor_pulley_xslteq32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 297.
                    return v15;
                }
                I64 => {
                    let v4 = constructor_put_in_xreg(ctx, arg2);
                    let v5 = constructor_put_in_xreg(ctx, arg3);
                    let v9 = constructor_pulley_xslteq64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 279.
                    return v9;
                }
                _ => {}
            }
        }
        &IntCC::UnsignedGreaterThan => {
            let v23 = constructor_lower_icmp(ctx, arg0, &IntCC::UnsignedLessThan, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 312.
            return v23;
        }
        &IntCC::UnsignedGreaterThanOrEqual => {
            let v25 =
                constructor_lower_icmp(ctx, arg0, &IntCC::UnsignedLessThanOrEqual, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 314.
            return v25;
        }
        &IntCC::UnsignedLessThan => {
            match arg0 {
                I32 => {
                    let v4 = constructor_put_in_xreg(ctx, arg2);
                    let v5 = constructor_put_in_xreg(ctx, arg3);
                    let v16 = constructor_pulley_xult32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 300.
                    return v16;
                }
                I64 => {
                    let v4 = constructor_put_in_xreg(ctx, arg2);
                    let v5 = constructor_put_in_xreg(ctx, arg3);
                    let v10 = constructor_pulley_xult64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 282.
                    return v10;
                }
                _ => {}
            }
        }
        &IntCC::UnsignedLessThanOrEqual => {
            match arg0 {
                I32 => {
                    let v4 = constructor_put_in_xreg(ctx, arg2);
                    let v5 = constructor_put_in_xreg(ctx, arg3);
                    let v17 = constructor_pulley_xulteq32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 303.
                    return v17;
                }
                I64 => {
                    let v4 = constructor_put_in_xreg(ctx, arg2);
                    let v5 = constructor_put_in_xreg(ctx, arg3);
                    let v11 = constructor_pulley_xulteq64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 285.
                    return v11;
                }
                _ => {}
            }
        }
        _ => {}
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "lower_icmp", "src/isa/pulley_shared/lower.isle line 268"
    )
}

// Generated as internal constructor for term lower_fcmp.
pub fn constructor_lower_fcmp<C: Context>(
    ctx: &mut C,
    arg0: Type,
    arg1: &FloatCC,
    arg2: Value,
    arg3: Value,
) -> XReg {
    match arg1 {
        &FloatCC::Equal => {
            match arg0 {
                F32 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v6 = constructor_pulley_feq32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 324.
                    return v6;
                }
                F64 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v7 = constructor_pulley_feq64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 325.
                    return v7;
                }
                _ => {}
            }
        }
        &FloatCC::GreaterThan => {
            let v13 = constructor_lower_fcmp(ctx, arg0, &FloatCC::LessThan, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 338.
            return v13;
        }
        &FloatCC::GreaterThanOrEqual => {
            let v15 = constructor_lower_fcmp(ctx, arg0, &FloatCC::LessThanOrEqual, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 340.
            return v15;
        }
        &FloatCC::LessThan => {
            match arg0 {
                F32 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v10 = constructor_pulley_flt32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 328.
                    return v10;
                }
                F64 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v11 = constructor_pulley_flt64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 329.
                    return v11;
                }
                _ => {}
            }
        }
        &FloatCC::LessThanOrEqual => {
            match arg0 {
                F32 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v10 = constructor_pulley_flt32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 330.
                    return v10;
                }
                F64 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v11 = constructor_pulley_flt64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 331.
                    return v11;
                }
                _ => {}
            }
        }
        &FloatCC::NotEqual => {
            match arg0 {
                F32 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v8 = constructor_pulley_fneq32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 326.
                    return v8;
                }
                F64 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v9 = constructor_pulley_fneq64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 327.
                    return v9;
                }
                _ => {}
            }
        }
        _ => {}
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "lower_fcmp", "src/isa/pulley_shared/lower.isle line 322"
    )
}

// Generated as internal constructor for term amode.
pub fn constructor_amode<C: Context>(ctx: &mut C, arg0: Value, arg1: Offset32) -> Amode {
    let v3 = constructor_put_in_xreg(ctx, arg0);
    let v2 = C::offset32(ctx, arg1);
    let v4 = Amode::RegOffset {
        base: v3,
        offset: v2,
    };
    // Rule at src/isa/pulley_shared/lower.isle line 346.
    return v4;
}

// Generated as internal constructor for term lower_stack_addr.
pub fn constructor_lower_stack_addr<C: Context>(
    ctx: &mut C,
    arg0: StackSlot,
    arg1: Offset32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = C::writable_xreg_to_writable_reg(ctx, v2);
    let v4 = &C::abi_stackslot_addr(ctx, v3, arg0, arg1);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at src/isa/pulley_shared/lower.isle line 413.
    return v6;
}

// Generated as internal constructor for term emit_cond.
pub fn constructor_emit_cond<C: Context>(ctx: &mut C, arg0: &Cond) -> XReg {
    match arg0 {
        &Cond::If32 { reg: v1 } => {
            // Rule at src/isa/pulley_shared/lower.isle line 469.
            return v1;
        }
        &Cond::IfNot32 { reg: v2 } => {
            let v4 = constructor_pulley_xconst8(ctx, 0_i8);
            let v5 = constructor_pulley_xeq32(ctx, v2, v4);
            // Rule at src/isa/pulley_shared/lower.isle line 470.
            return v5;
        }
        &Cond::IfXeq32 { src1: v6, src2: v7 } => {
            let v8 = constructor_pulley_xeq32(ctx, v6, v7);
            // Rule at src/isa/pulley_shared/lower.isle line 471.
            return v8;
        }
        &Cond::IfXneq32 {
            src1: v9,
            src2: v10,
        } => {
            let v11 = constructor_pulley_xneq32(ctx, v9, v10);
            // Rule at src/isa/pulley_shared/lower.isle line 472.
            return v11;
        }
        &Cond::IfXslt32 {
            src1: v12,
            src2: v13,
        } => {
            let v14 = constructor_pulley_xslt32(ctx, v12, v13);
            // Rule at src/isa/pulley_shared/lower.isle line 473.
            return v14;
        }
        &Cond::IfXslteq32 {
            src1: v15,
            src2: v16,
        } => {
            let v17 = constructor_pulley_xslteq32(ctx, v15, v16);
            // Rule at src/isa/pulley_shared/lower.isle line 474.
            return v17;
        }
        &Cond::IfXult32 {
            src1: v18,
            src2: v19,
        } => {
            let v20 = constructor_pulley_xult32(ctx, v18, v19);
            // Rule at src/isa/pulley_shared/lower.isle line 475.
            return v20;
        }
        &Cond::IfXulteq32 {
            src1: v21,
            src2: v22,
        } => {
            let v23 = constructor_pulley_xulteq32(ctx, v21, v22);
            // Rule at src/isa/pulley_shared/lower.isle line 476.
            return v23;
        }
        &Cond::IfXeq64 {
            src1: v24,
            src2: v25,
        } => {
            let v26 = constructor_pulley_xeq64(ctx, v24, v25);
            // Rule at src/isa/pulley_shared/lower.isle line 477.
            return v26;
        }
        &Cond::IfXneq64 {
            src1: v27,
            src2: v28,
        } => {
            let v29 = constructor_pulley_xneq64(ctx, v27, v28);
            // Rule at src/isa/pulley_shared/lower.isle line 478.
            return v29;
        }
        &Cond::IfXslt64 {
            src1: v30,
            src2: v31,
        } => {
            let v32 = constructor_pulley_xslt64(ctx, v30, v31);
            // Rule at src/isa/pulley_shared/lower.isle line 479.
            return v32;
        }
        &Cond::IfXslteq64 {
            src1: v33,
            src2: v34,
        } => {
            let v35 = constructor_pulley_xslteq64(ctx, v33, v34);
            // Rule at src/isa/pulley_shared/lower.isle line 480.
            return v35;
        }
        &Cond::IfXult64 {
            src1: v36,
            src2: v37,
        } => {
            let v38 = constructor_pulley_xult64(ctx, v36, v37);
            // Rule at src/isa/pulley_shared/lower.isle line 481.
            return v38;
        }
        &Cond::IfXulteq64 {
            src1: v39,
            src2: v40,
        } => {
            let v41 = constructor_pulley_xulteq64(ctx, v39, v40);
            // Rule at src/isa/pulley_shared/lower.isle line 482.
            return v41;
        }
        _ => {}
    }
    unreachable!(
        "no rule matched for term {} at {}; should it be partial?",
        "emit_cond", "src/isa/pulley_shared/lower.isle line 468"
    )
}

// Generated as internal constructor for term pulley_ret.
pub fn constructor_pulley_ret<C: Context>(ctx: &mut C) -> SideEffectNoResult {
    let v1 = &constructor_raw_inst_to_inst(ctx, &RawInst::Ret);
    let v2 = SideEffectNoResult::Inst { inst: v1.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 556.
    return v2;
}

// Generated as internal constructor for term pulley_xmov.
pub fn constructor_pulley_xmov<C: Context>(ctx: &mut C, arg0: XReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xmov { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 558.
    return v5;
}

// Generated as internal constructor for term pulley_fmov.
pub fn constructor_pulley_fmov<C: Context>(ctx: &mut C, arg0: FReg) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fmov { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 565.
    return v5;
}

// Generated as internal constructor for term pulley_vmov.
pub fn constructor_pulley_vmov<C: Context>(ctx: &mut C, arg0: VReg) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vmov { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 572.
    return v5;
}

// Generated as internal constructor for term pulley_xconst8.
pub fn constructor_pulley_xconst8<C: Context>(ctx: &mut C, arg0: i8) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xconst8 { dst: v1, imm: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 579.
    return v5;
}

// Generated as internal constructor for term pulley_xconst16.
pub fn constructor_pulley_xconst16<C: Context>(ctx: &mut C, arg0: i16) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xconst16 { dst: v1, imm: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 586.
    return v5;
}

// Generated as internal constructor for term pulley_xconst32.
pub fn constructor_pulley_xconst32<C: Context>(ctx: &mut C, arg0: i32) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xconst32 { dst: v1, imm: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 593.
    return v5;
}

// Generated as internal constructor for term pulley_xconst64.
pub fn constructor_pulley_xconst64<C: Context>(ctx: &mut C, arg0: i64) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xconst64 { dst: v1, imm: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 600.
    return v5;
}

// Generated as internal constructor for term pulley_xadd32.
pub fn constructor_pulley_xadd32<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xadd32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 607.
    return v6;
}

// Generated as internal constructor for term pulley_xadd64.
pub fn constructor_pulley_xadd64<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xadd64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 614.
    return v6;
}

// Generated as internal constructor for term pulley_xadd32_uoverflow_trap.
pub fn constructor_pulley_xadd32_uoverflow_trap<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: &TrapCode,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::Xadd32UoverflowTrap {
        dst: v3,
        src1: arg0,
        src2: arg1,
        code: arg2.clone(),
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 621.
    return v7;
}

// Generated as internal constructor for term pulley_xadd64_uoverflow_trap.
pub fn constructor_pulley_xadd64_uoverflow_trap<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: &TrapCode,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::Xadd64UoverflowTrap {
        dst: v3,
        src1: arg0,
        src2: arg1,
        code: arg2.clone(),
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 628.
    return v7;
}

// Generated as internal constructor for term pulley_xsub32.
pub fn constructor_pulley_xsub32<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xsub32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 635.
    return v6;
}

// Generated as internal constructor for term pulley_xsub64.
pub fn constructor_pulley_xsub64<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xsub64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 642.
    return v6;
}

// Generated as internal constructor for term pulley_xmul32.
pub fn constructor_pulley_xmul32<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XMul32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 649.
    return v6;
}

// Generated as internal constructor for term pulley_xmul64.
pub fn constructor_pulley_xmul64<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XMul64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 656.
    return v6;
}

// Generated as internal constructor for term pulley_xctz32.
pub fn constructor_pulley_xctz32<C: Context>(ctx: &mut C, arg0: XReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xctz32 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 663.
    return v5;
}

// Generated as internal constructor for term pulley_xctz64.
pub fn constructor_pulley_xctz64<C: Context>(ctx: &mut C, arg0: XReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xctz64 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 670.
    return v5;
}

// Generated as internal constructor for term pulley_xclz32.
pub fn constructor_pulley_xclz32<C: Context>(ctx: &mut C, arg0: XReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xclz32 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 677.
    return v5;
}

// Generated as internal constructor for term pulley_xclz64.
pub fn constructor_pulley_xclz64<C: Context>(ctx: &mut C, arg0: XReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xclz64 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 684.
    return v5;
}

// Generated as internal constructor for term pulley_xpopcnt32.
pub fn constructor_pulley_xpopcnt32<C: Context>(ctx: &mut C, arg0: XReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xpopcnt32 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 691.
    return v5;
}

// Generated as internal constructor for term pulley_xpopcnt64.
pub fn constructor_pulley_xpopcnt64<C: Context>(ctx: &mut C, arg0: XReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xpopcnt64 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 698.
    return v5;
}

// Generated as internal constructor for term pulley_xrotl32.
pub fn constructor_pulley_xrotl32<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xrotl32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 705.
    return v6;
}

// Generated as internal constructor for term pulley_xrotl64.
pub fn constructor_pulley_xrotl64<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xrotl64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 712.
    return v6;
}

// Generated as internal constructor for term pulley_xrotr32.
pub fn constructor_pulley_xrotr32<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xrotr32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 719.
    return v6;
}

// Generated as internal constructor for term pulley_xrotr64.
pub fn constructor_pulley_xrotr64<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xrotr64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 726.
    return v6;
}

// Generated as internal constructor for term pulley_xshl32.
pub fn constructor_pulley_xshl32<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshl32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 733.
    return v6;
}

// Generated as internal constructor for term pulley_xshr32_s.
pub fn constructor_pulley_xshr32_s<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr32S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 740.
    return v6;
}

// Generated as internal constructor for term pulley_xshr32_u.
pub fn constructor_pulley_xshr32_u<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr32U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 747.
    return v6;
}

// Generated as internal constructor for term pulley_xshl64.
pub fn constructor_pulley_xshl64<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshl64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 754.
    return v6;
}

// Generated as internal constructor for term pulley_xshr64_s.
pub fn constructor_pulley_xshr64_s<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr64S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 761.
    return v6;
}

// Generated as internal constructor for term pulley_xshr64_u.
pub fn constructor_pulley_xshr64_u<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr64U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 768.
    return v6;
}

// Generated as internal constructor for term pulley_xeq64.
pub fn constructor_pulley_xeq64<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xeq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 775.
    return v6;
}

// Generated as internal constructor for term pulley_xneq64.
pub fn constructor_pulley_xneq64<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xneq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 782.
    return v6;
}

// Generated as internal constructor for term pulley_xslt64.
pub fn constructor_pulley_xslt64<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xslt64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 789.
    return v6;
}

// Generated as internal constructor for term pulley_xslteq64.
pub fn constructor_pulley_xslteq64<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xslteq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 796.
    return v6;
}

// Generated as internal constructor for term pulley_xult64.
pub fn constructor_pulley_xult64<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xult64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 803.
    return v6;
}

// Generated as internal constructor for term pulley_xulteq64.
pub fn constructor_pulley_xulteq64<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xulteq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 810.
    return v6;
}

// Generated as internal constructor for term pulley_xeq32.
pub fn constructor_pulley_xeq32<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xeq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 817.
    return v6;
}

// Generated as internal constructor for term pulley_xneq32.
pub fn constructor_pulley_xneq32<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xneq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 824.
    return v6;
}

// Generated as internal constructor for term pulley_xslt32.
pub fn constructor_pulley_xslt32<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xslt32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 831.
    return v6;
}

// Generated as internal constructor for term pulley_xslteq32.
pub fn constructor_pulley_xslteq32<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xslteq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 838.
    return v6;
}

// Generated as internal constructor for term pulley_xult32.
pub fn constructor_pulley_xult32<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xult32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 845.
    return v6;
}

// Generated as internal constructor for term pulley_xulteq32.
pub fn constructor_pulley_xulteq32<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xulteq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 852.
    return v6;
}

// Generated as internal constructor for term pulley_xload8_u32_offset32.
pub fn constructor_pulley_xload8_u32_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad8U32Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 859.
    return v6;
}

// Generated as internal constructor for term pulley_xload8_s32_offset32.
pub fn constructor_pulley_xload8_s32_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad8S32Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 866.
    return v6;
}

// Generated as internal constructor for term pulley_xload16le_u32_offset32.
pub fn constructor_pulley_xload16le_u32_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad16LeU32Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 873.
    return v6;
}

// Generated as internal constructor for term pulley_xload16le_s32_offset32.
pub fn constructor_pulley_xload16le_s32_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad16LeS32Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 880.
    return v6;
}

// Generated as internal constructor for term pulley_xload32le_offset32.
pub fn constructor_pulley_xload32le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad32LeOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 887.
    return v6;
}

// Generated as internal constructor for term pulley_xload8_u64_offset32.
pub fn constructor_pulley_xload8_u64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad8U64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 894.
    return v6;
}

// Generated as internal constructor for term pulley_xload8_s64_offset32.
pub fn constructor_pulley_xload8_s64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad8S64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 901.
    return v6;
}

// Generated as internal constructor for term pulley_xload16le_u64_offset32.
pub fn constructor_pulley_xload16le_u64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad16LeU64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 908.
    return v6;
}

// Generated as internal constructor for term pulley_xload16le_s64_offset32.
pub fn constructor_pulley_xload16le_s64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad16LeS64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 915.
    return v6;
}

// Generated as internal constructor for term pulley_xload32le_u64_offset32.
pub fn constructor_pulley_xload32le_u64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad32LeU64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 922.
    return v6;
}

// Generated as internal constructor for term pulley_xload32le_s64_offset32.
pub fn constructor_pulley_xload32le_s64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad32LeS64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 929.
    return v6;
}

// Generated as internal constructor for term pulley_xload64le_offset32.
pub fn constructor_pulley_xload64le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad64LeOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 936.
    return v6;
}

// Generated as internal constructor for term pulley_xstore8_offset32.
pub fn constructor_pulley_xstore8_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore8Offset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst { inst: v4.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 943.
    return v5;
}

// Generated as internal constructor for term pulley_xstore16le_offset32.
pub fn constructor_pulley_xstore16le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore16LeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst { inst: v4.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 945.
    return v5;
}

// Generated as internal constructor for term pulley_xstore32le_offset32.
pub fn constructor_pulley_xstore32le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore32LeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst { inst: v4.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 947.
    return v5;
}

// Generated as internal constructor for term pulley_xstore64le_offset32.
pub fn constructor_pulley_xstore64le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore64LeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst { inst: v4.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 949.
    return v5;
}

// Generated as internal constructor for term pulley_fload32le_offset32.
pub fn constructor_pulley_fload32le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fload32LeOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 951.
    return v6;
}

// Generated as internal constructor for term pulley_fload64le_offset32.
pub fn constructor_pulley_fload64le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fload64LeOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 958.
    return v6;
}

// Generated as internal constructor for term pulley_fstore32le_offset32.
pub fn constructor_pulley_fstore32le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: FReg,
) -> SideEffectNoResult {
    let v3 = RawInst::Fstore32LeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst { inst: v4.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 965.
    return v5;
}

// Generated as internal constructor for term pulley_fstore64le_offset32.
pub fn constructor_pulley_fstore64le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: FReg,
) -> SideEffectNoResult {
    let v3 = RawInst::Fstore64LeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst { inst: v4.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 967.
    return v5;
}

// Generated as internal constructor for term pulley_vload128le_offset32.
pub fn constructor_pulley_vload128le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VLoad128Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 969.
    return v6;
}

// Generated as internal constructor for term pulley_vstore128le_offset32.
pub fn constructor_pulley_vstore128le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: VReg,
) -> SideEffectNoResult {
    let v3 = RawInst::Vstore128LeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst { inst: v4.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 976.
    return v5;
}

// Generated as internal constructor for term pulley_push_frame.
pub fn constructor_pulley_push_frame<C: Context>(ctx: &mut C) -> SideEffectNoResult {
    let v1 = &constructor_raw_inst_to_inst(ctx, &RawInst::PushFrame);
    let v2 = SideEffectNoResult::Inst { inst: v1.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 978.
    return v2;
}

// Generated as internal constructor for term pulley_pop_frame.
pub fn constructor_pulley_pop_frame<C: Context>(ctx: &mut C) -> SideEffectNoResult {
    let v1 = &constructor_raw_inst_to_inst(ctx, &RawInst::PopFrame);
    let v2 = SideEffectNoResult::Inst { inst: v1.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 980.
    return v2;
}

// Generated as internal constructor for term pulley_xpush32.
pub fn constructor_pulley_xpush32<C: Context>(ctx: &mut C, arg0: XReg) -> SideEffectNoResult {
    let v1 = RawInst::XPush32 { src: arg0 };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = SideEffectNoResult::Inst { inst: v2.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 982.
    return v3;
}

// Generated as internal constructor for term pulley_xpush64.
pub fn constructor_pulley_xpush64<C: Context>(ctx: &mut C, arg0: XReg) -> SideEffectNoResult {
    let v1 = RawInst::XPush64 { src: arg0 };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = SideEffectNoResult::Inst { inst: v2.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 984.
    return v3;
}

// Generated as internal constructor for term pulley_xpop32.
pub fn constructor_pulley_xpop32<C: Context>(ctx: &mut C) -> XReg {
    let v0 = constructor_temp_writable_xreg(ctx);
    let v1 = RawInst::XPop32 { dst: v0 };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = C::emit(ctx, v2);
    let v4 = C::writable_xreg_to_xreg(ctx, v0);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 986.
    return v4;
}

// Generated as internal constructor for term pulley_xpop64.
pub fn constructor_pulley_xpop64<C: Context>(ctx: &mut C) -> XReg {
    let v0 = constructor_temp_writable_xreg(ctx);
    let v1 = RawInst::XPop64 { dst: v0 };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = C::emit(ctx, v2);
    let v4 = C::writable_xreg_to_xreg(ctx, v0);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 993.
    return v4;
}

// Generated as internal constructor for term pulley_bitcast_int_from_float_32.
pub fn constructor_pulley_bitcast_int_from_float_32<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::BitcastIntFromFloat32 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1000.
    return v5;
}

// Generated as internal constructor for term pulley_bitcast_int_from_float_64.
pub fn constructor_pulley_bitcast_int_from_float_64<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::BitcastIntFromFloat64 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1007.
    return v5;
}

// Generated as internal constructor for term pulley_bitcast_float_from_int_32.
pub fn constructor_pulley_bitcast_float_from_int_32<C: Context>(ctx: &mut C, arg0: XReg) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::BitcastFloatFromInt32 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1014.
    return v5;
}

// Generated as internal constructor for term pulley_bitcast_float_from_int_64.
pub fn constructor_pulley_bitcast_float_from_int_64<C: Context>(ctx: &mut C, arg0: XReg) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::BitcastFloatFromInt64 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1021.
    return v5;
}

// Generated as internal constructor for term pulley_stack_alloc32.
pub fn constructor_pulley_stack_alloc32<C: Context>(ctx: &mut C, arg0: u32) -> SideEffectNoResult {
    let v1 = RawInst::StackAlloc32 { amt: arg0 };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = SideEffectNoResult::Inst { inst: v2.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1028.
    return v3;
}

// Generated as internal constructor for term pulley_stack_free32.
pub fn constructor_pulley_stack_free32<C: Context>(ctx: &mut C, arg0: u32) -> SideEffectNoResult {
    let v1 = RawInst::StackFree32 { amt: arg0 };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = SideEffectNoResult::Inst { inst: v2.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1030.
    return v3;
}

// Generated as internal constructor for term pulley_zext8.
pub fn constructor_pulley_zext8<C: Context>(ctx: &mut C, arg0: XReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Zext8 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1032.
    return v5;
}

// Generated as internal constructor for term pulley_zext16.
pub fn constructor_pulley_zext16<C: Context>(ctx: &mut C, arg0: XReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Zext16 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1039.
    return v5;
}

// Generated as internal constructor for term pulley_zext32.
pub fn constructor_pulley_zext32<C: Context>(ctx: &mut C, arg0: XReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Zext32 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1046.
    return v5;
}

// Generated as internal constructor for term pulley_sext8.
pub fn constructor_pulley_sext8<C: Context>(ctx: &mut C, arg0: XReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Sext8 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1053.
    return v5;
}

// Generated as internal constructor for term pulley_sext16.
pub fn constructor_pulley_sext16<C: Context>(ctx: &mut C, arg0: XReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Sext16 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1060.
    return v5;
}

// Generated as internal constructor for term pulley_sext32.
pub fn constructor_pulley_sext32<C: Context>(ctx: &mut C, arg0: XReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Sext32 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1067.
    return v5;
}

// Generated as internal constructor for term pulley_xdiv32_s.
pub fn constructor_pulley_xdiv32_s<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XDiv32S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1074.
    return v6;
}

// Generated as internal constructor for term pulley_xdiv64_s.
pub fn constructor_pulley_xdiv64_s<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XDiv64S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1081.
    return v6;
}

// Generated as internal constructor for term pulley_xdiv32_u.
pub fn constructor_pulley_xdiv32_u<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XDiv32U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1088.
    return v6;
}

// Generated as internal constructor for term pulley_xdiv64_u.
pub fn constructor_pulley_xdiv64_u<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XDiv64U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1095.
    return v6;
}

// Generated as internal constructor for term pulley_xrem32_s.
pub fn constructor_pulley_xrem32_s<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XRem32S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1102.
    return v6;
}

// Generated as internal constructor for term pulley_xrem64_s.
pub fn constructor_pulley_xrem64_s<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XRem64S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1109.
    return v6;
}

// Generated as internal constructor for term pulley_xrem32_u.
pub fn constructor_pulley_xrem32_u<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XRem32U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1116.
    return v6;
}

// Generated as internal constructor for term pulley_xrem64_u.
pub fn constructor_pulley_xrem64_u<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XRem64U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1123.
    return v6;
}

// Generated as internal constructor for term pulley_xband32.
pub fn constructor_pulley_xband32<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBand32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1130.
    return v6;
}

// Generated as internal constructor for term pulley_xband64.
pub fn constructor_pulley_xband64<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBand64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1137.
    return v6;
}

// Generated as internal constructor for term pulley_xbor32.
pub fn constructor_pulley_xbor32<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBor32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1144.
    return v6;
}

// Generated as internal constructor for term pulley_xbor64.
pub fn constructor_pulley_xbor64<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBor64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1151.
    return v6;
}

// Generated as internal constructor for term pulley_xbxor32.
pub fn constructor_pulley_xbxor32<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBxor32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1158.
    return v6;
}

// Generated as internal constructor for term pulley_xbxor64.
pub fn constructor_pulley_xbxor64<C: Context>(ctx: &mut C, arg0: XReg, arg1: XReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBxor64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1165.
    return v6;
}

// Generated as internal constructor for term pulley_fconst32.
pub fn constructor_pulley_fconst32<C: Context>(ctx: &mut C, arg0: u32) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::FConst32 {
        dst: v1,
        bits: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1172.
    return v5;
}

// Generated as internal constructor for term pulley_fconst64.
pub fn constructor_pulley_fconst64<C: Context>(ctx: &mut C, arg0: u64) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::FConst64 {
        dst: v1,
        bits: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1179.
    return v5;
}

// Generated as internal constructor for term pulley_feq32.
pub fn constructor_pulley_feq32<C: Context>(ctx: &mut C, arg0: FReg, arg1: FReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Feq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1186.
    return v6;
}

// Generated as internal constructor for term pulley_fneq32.
pub fn constructor_pulley_fneq32<C: Context>(ctx: &mut C, arg0: FReg, arg1: FReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Fneq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1193.
    return v6;
}

// Generated as internal constructor for term pulley_flt32.
pub fn constructor_pulley_flt32<C: Context>(ctx: &mut C, arg0: FReg, arg1: FReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Flt32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1200.
    return v6;
}

// Generated as internal constructor for term pulley_flteq32.
pub fn constructor_pulley_flteq32<C: Context>(ctx: &mut C, arg0: FReg, arg1: FReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Flteq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1207.
    return v6;
}

// Generated as internal constructor for term pulley_feq64.
pub fn constructor_pulley_feq64<C: Context>(ctx: &mut C, arg0: FReg, arg1: FReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Feq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1214.
    return v6;
}

// Generated as internal constructor for term pulley_fneq64.
pub fn constructor_pulley_fneq64<C: Context>(ctx: &mut C, arg0: FReg, arg1: FReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Fneq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1221.
    return v6;
}

// Generated as internal constructor for term pulley_flt64.
pub fn constructor_pulley_flt64<C: Context>(ctx: &mut C, arg0: FReg, arg1: FReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Flt64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1228.
    return v6;
}

// Generated as internal constructor for term pulley_flteq64.
pub fn constructor_pulley_flteq64<C: Context>(ctx: &mut C, arg0: FReg, arg1: FReg) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Flteq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1235.
    return v6;
}

// Generated as internal constructor for term pulley_xselect32.
pub fn constructor_pulley_xselect32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: XReg,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::XSelect32 {
        dst: v3,
        cond: arg0,
        if_nonzero: arg1,
        if_zero: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1242.
    return v7;
}

// Generated as internal constructor for term pulley_xselect64.
pub fn constructor_pulley_xselect64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: XReg,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::XSelect64 {
        dst: v3,
        cond: arg0,
        if_nonzero: arg1,
        if_zero: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1249.
    return v7;
}

// Generated as internal constructor for term pulley_fselect32.
pub fn constructor_pulley_fselect32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: FReg,
    arg2: FReg,
) -> FReg {
    let v3 = constructor_temp_writable_freg(ctx);
    let v4 = RawInst::FSelect32 {
        dst: v3,
        cond: arg0,
        if_nonzero: arg1,
        if_zero: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_freg_to_freg(ctx, v3);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1256.
    return v7;
}

// Generated as internal constructor for term pulley_fselect64.
pub fn constructor_pulley_fselect64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: FReg,
    arg2: FReg,
) -> FReg {
    let v3 = constructor_temp_writable_freg(ctx);
    let v4 = RawInst::FSelect64 {
        dst: v3,
        cond: arg0,
        if_nonzero: arg1,
        if_zero: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_freg_to_freg(ctx, v3);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1263.
    return v7;
}

// Generated as internal constructor for term pulley_f32_from_x32_s.
pub fn constructor_pulley_f32_from_x32_s<C: Context>(ctx: &mut C, arg0: XReg) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F32FromX32S { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1270.
    return v5;
}

// Generated as internal constructor for term pulley_f32_from_x32_u.
pub fn constructor_pulley_f32_from_x32_u<C: Context>(ctx: &mut C, arg0: XReg) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F32FromX32U { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1277.
    return v5;
}

// Generated as internal constructor for term pulley_f32_from_x64_s.
pub fn constructor_pulley_f32_from_x64_s<C: Context>(ctx: &mut C, arg0: XReg) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F32FromX64S { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1284.
    return v5;
}

// Generated as internal constructor for term pulley_f32_from_x64_u.
pub fn constructor_pulley_f32_from_x64_u<C: Context>(ctx: &mut C, arg0: XReg) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F32FromX64U { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1291.
    return v5;
}

// Generated as internal constructor for term pulley_f64_from_x32_s.
pub fn constructor_pulley_f64_from_x32_s<C: Context>(ctx: &mut C, arg0: XReg) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F64FromX32S { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1298.
    return v5;
}

// Generated as internal constructor for term pulley_f64_from_x32_u.
pub fn constructor_pulley_f64_from_x32_u<C: Context>(ctx: &mut C, arg0: XReg) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F64FromX32U { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1305.
    return v5;
}

// Generated as internal constructor for term pulley_f64_from_x64_s.
pub fn constructor_pulley_f64_from_x64_s<C: Context>(ctx: &mut C, arg0: XReg) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F64FromX64S { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1312.
    return v5;
}

// Generated as internal constructor for term pulley_f64_from_x64_u.
pub fn constructor_pulley_f64_from_x64_u<C: Context>(ctx: &mut C, arg0: XReg) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F64FromX64U { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1319.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f32_s.
pub fn constructor_pulley_x32_from_f32_s<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF32S { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1326.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f32_u.
pub fn constructor_pulley_x32_from_f32_u<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF32U { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1333.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f64_s.
pub fn constructor_pulley_x32_from_f64_s<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF64S { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1340.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f64_u.
pub fn constructor_pulley_x32_from_f64_u<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF64U { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1347.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f32_s.
pub fn constructor_pulley_x64_from_f32_s<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF32S { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1354.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f32_u.
pub fn constructor_pulley_x64_from_f32_u<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF32U { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1361.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f64_s.
pub fn constructor_pulley_x64_from_f64_s<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF64S { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1368.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f64_u.
pub fn constructor_pulley_x64_from_f64_u<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF64U { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1375.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f32_s_sat.
pub fn constructor_pulley_x32_from_f32_s_sat<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF32SSat { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1382.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f32_u_sat.
pub fn constructor_pulley_x32_from_f32_u_sat<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF32USat { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1389.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f64_s_sat.
pub fn constructor_pulley_x32_from_f64_s_sat<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF64SSat { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1396.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f64_u_sat.
pub fn constructor_pulley_x32_from_f64_u_sat<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF64USat { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1403.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f32_s_sat.
pub fn constructor_pulley_x64_from_f32_s_sat<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF32SSat { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1410.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f32_u_sat.
pub fn constructor_pulley_x64_from_f32_u_sat<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF32USat { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1417.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f64_s_sat.
pub fn constructor_pulley_x64_from_f64_s_sat<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF64SSat { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1424.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f64_u_sat.
pub fn constructor_pulley_x64_from_f64_u_sat<C: Context>(ctx: &mut C, arg0: FReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF64USat { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1431.
    return v5;
}

// Generated as internal constructor for term pulley_f32_from_f64.
pub fn constructor_pulley_f32_from_f64<C: Context>(ctx: &mut C, arg0: FReg) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F32FromF64 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1438.
    return v5;
}

// Generated as internal constructor for term pulley_f64_from_f32.
pub fn constructor_pulley_f64_from_f32<C: Context>(ctx: &mut C, arg0: FReg) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F64FromF32 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1445.
    return v5;
}

// Generated as internal constructor for term pulley_fcopysign32.
pub fn constructor_pulley_fcopysign32<C: Context>(ctx: &mut C, arg0: FReg, arg1: FReg) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::FCopySign32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1452.
    return v6;
}

// Generated as internal constructor for term pulley_fcopysign64.
pub fn constructor_pulley_fcopysign64<C: Context>(ctx: &mut C, arg0: FReg, arg1: FReg) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::FCopySign64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1459.
    return v6;
}

// Generated as internal constructor for term pulley_trap.
pub fn constructor_pulley_trap<C: Context>(ctx: &mut C, arg0: &TrapCode) -> SideEffectNoResult {
    let v1 = RawInst::Trap { code: arg0.clone() };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = SideEffectNoResult::Inst { inst: v2.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1466.
    return v3;
}

// Generated as internal constructor for term pulley_nop.
pub fn constructor_pulley_nop<C: Context>(ctx: &mut C) -> SideEffectNoResult {
    let v1 = &constructor_raw_inst_to_inst(ctx, &RawInst::Nop);
    let v2 = SideEffectNoResult::Inst { inst: v1.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1468.
    return v2;
}

// Generated as internal constructor for term pulley_call_indirect_host.
pub fn constructor_pulley_call_indirect_host<C: Context>(
    ctx: &mut C,
    arg0: u8,
) -> SideEffectNoResult {
    let v1 = RawInst::CallIndirectHost { id: arg0 };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = SideEffectNoResult::Inst { inst: v2.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1470.
    return v3;
}

// Generated as internal constructor for term pulley_bswap32.
pub fn constructor_pulley_bswap32<C: Context>(ctx: &mut C, arg0: XReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Bswap32 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1472.
    return v5;
}

// Generated as internal constructor for term pulley_bswap64.
pub fn constructor_pulley_bswap64<C: Context>(ctx: &mut C, arg0: XReg) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Bswap64 { dst: v1, src: arg0 };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1479.
    return v5;
}

// Generated as internal constructor for term pulley_xload16be_u64_offset32.
pub fn constructor_pulley_xload16be_u64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad16BeU64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1486.
    return v6;
}

// Generated as internal constructor for term pulley_xload16be_s64_offset32.
pub fn constructor_pulley_xload16be_s64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad16BeS64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1493.
    return v6;
}

// Generated as internal constructor for term pulley_xload32be_u64_offset32.
pub fn constructor_pulley_xload32be_u64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad32BeU64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1500.
    return v6;
}

// Generated as internal constructor for term pulley_xload32be_s64_offset32.
pub fn constructor_pulley_xload32be_s64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad32BeS64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1507.
    return v6;
}

// Generated as internal constructor for term pulley_xload64be_offset32.
pub fn constructor_pulley_xload64be_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad64BeOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1514.
    return v6;
}

// Generated as internal constructor for term pulley_xstore16be_offset32.
pub fn constructor_pulley_xstore16be_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore16BeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst { inst: v4.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1521.
    return v5;
}

// Generated as internal constructor for term pulley_xstore32be_offset32.
pub fn constructor_pulley_xstore32be_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore32BeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst { inst: v4.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1523.
    return v5;
}

// Generated as internal constructor for term pulley_xstore64be_offset32.
pub fn constructor_pulley_xstore64be_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore64BeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst { inst: v4.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1525.
    return v5;
}

// Generated as internal constructor for term pulley_fload32be_offset32.
pub fn constructor_pulley_fload32be_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fload32BeOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1527.
    return v6;
}

// Generated as internal constructor for term pulley_fload64be_offset32.
pub fn constructor_pulley_fload64be_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fload64BeOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1534.
    return v6;
}

// Generated as internal constructor for term pulley_fstore32be_offset32.
pub fn constructor_pulley_fstore32be_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: FReg,
) -> SideEffectNoResult {
    let v3 = RawInst::Fstore32BeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst { inst: v4.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1541.
    return v5;
}

// Generated as internal constructor for term pulley_fstore64be_offset32.
pub fn constructor_pulley_fstore64be_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: FReg,
) -> SideEffectNoResult {
    let v3 = RawInst::Fstore64BeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst { inst: v4.clone() };
    // Rule at /home/obfuscator/wasmtime/target/debug/build/cranelift-codegen-3fe1afd31b6dd77f/out/pulley_gen.isle line 1543.
    return v5;
}
